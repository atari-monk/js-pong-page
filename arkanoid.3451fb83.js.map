{"mappings":"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","sources":["src/js/arkanoid.js"],"sourcesContent":["'use strict'\r\n\r\nconst canvas = document.getElementById(\"my-canvas\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst ballRadius = 10;\r\nlet x = canvas.width / 2;\r\nlet y = canvas.height - 30;\r\nlet dx = 2;\r\nlet dy = -2;\r\nconst paddleHeight = 10;\r\nconst paddleWidth = 75;\r\nlet paddleX = (canvas.width - paddleWidth) / 2;\r\nlet rightPressed = false;\r\nlet leftPressed = false;\r\nconst brickRowCount = 5;\r\nconst brickColumnCount = 3;\r\nconst brickWidth = 75;\r\nconst brickHeight = 20;\r\nconst brickPadding = 10;\r\nconst brickOffsetTop = 30;\r\nconst brickOffsetLeft = 30;\r\nlet score = 0;\r\nlet lives = 3;\r\n\r\nconst bricks = [];\r\nfor (let c = 0; c < brickColumnCount; c++) {\r\n  bricks[c] = [];\r\n  for (let r = 0; r < brickRowCount; r++) {\r\n    bricks[c][r] = { x: 0, y: 0, status: 1 };\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", keyDownHandler, false);\r\ndocument.addEventListener(\"keyup\", keyUpHandler, false);\r\ndocument.addEventListener(\"mousemove\", mouseMoveHandler, false);\r\n\r\nfunction keyDownHandler(e) {\r\n  if (e.code == \"ArrowRight\") {\r\n    rightPressed = true;\r\n  }\r\n  else if (e.code == 'ArrowLeft') {\r\n    leftPressed = true;\r\n  }\r\n}\r\n\r\nfunction keyUpHandler(e) {\r\n  if (e.code == 'ArrowRight') {\r\n    rightPressed = false;\r\n  }\r\n  else if (e.code == 'ArrowLeft') {\r\n    leftPressed = false;\r\n  }\r\n}\r\n\r\nfunction mouseMoveHandler(e) {\r\n  const relativeX = e.clientX - canvas.offsetLeft;\r\n  if (relativeX > 0 && relativeX < canvas.width) {\r\n    paddleX = relativeX - paddleWidth / 2;\r\n  }\r\n}\r\n\r\nfunction collisionDetection() {\r\n  for (let c = 0; c < brickColumnCount; c++) {\r\n    for (let r = 0; r < brickRowCount; r++) {\r\n      const b = bricks[c][r];\r\n      if (b.status == 1) {\r\n        if (x > b.x && x < b.x + brickWidth && y > b.y && y < b.y + brickHeight) {\r\n          dy = -dy;\r\n          b.status = 0;\r\n          score++;\r\n          if (score == brickRowCount * brickColumnCount) {\r\n            alert(\"YOU WIN, CONGRATS!\");\r\n            document.location.reload();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawBall() {\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawPaddle() {\r\n  ctx.beginPath();\r\n  ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fill();\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawBricks() {\r\n  for (let c = 0; c < brickColumnCount; c++) {\r\n    for (let r = 0; r < brickRowCount; r++) {\r\n      if (bricks[c][r].status == 1) {\r\n        const brickX = (r * (brickWidth + brickPadding)) + brickOffsetLeft;\r\n        const brickY = (c * (brickHeight + brickPadding)) + brickOffsetTop;\r\n        bricks[c][r].x = brickX;\r\n        bricks[c][r].y = brickY;\r\n        ctx.beginPath();\r\n        ctx.rect(brickX, brickY, brickWidth, brickHeight);\r\n        ctx.fillStyle = \"#0095DD\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawScore() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Score: \" + score, 8, 20);\r\n}\r\n\r\nfunction drawLives() {\r\n  ctx.font = \"16px Arial\";\r\n  ctx.fillStyle = \"#0095DD\";\r\n  ctx.fillText(\"Lives: \" + lives, canvas.width - 65, 20);\r\n}\r\n\r\nfunction draw() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  drawBricks();\r\n  drawBall();\r\n  drawPaddle();\r\n  drawScore();\r\n  drawLives();\r\n  collisionDetection();\r\n\r\n  if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\r\n    dx = -dx;\r\n  }\r\n  if (y + dy < ballRadius) {\r\n    dy = -dy;\r\n  }\r\n  else if (y + dy > canvas.height - ballRadius) {\r\n    if (x > paddleX && x < paddleX + paddleWidth) {\r\n      dy = -dy;\r\n    }\r\n    else {\r\n      lives--;\r\n      if (!lives) {\r\n        alert(\"GAME OVER\");\r\n        document.location.reload();\r\n      }\r\n      else {\r\n        x = canvas.width / 2;\r\n        y = canvas.height - 30;\r\n        dx = 2;\r\n        dy = -2;\r\n        paddleX = (canvas.width - paddleWidth) / 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (rightPressed && paddleX < canvas.width - paddleWidth) {\r\n    paddleX += 7;\r\n  }\r\n  else if (leftPressed && paddleX > 0) {\r\n    paddleX -= 7;\r\n  }\r\n\r\n  x += dx;\r\n  y += dy;\r\n  requestAnimationFrame(draw);\r\n}\r\n\r\ndraw();"],"names":["canvas","document","getElementById","ctx","getContext","ballRadius","x","width","y","height","dx","dy","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","score","lives","bricks","c","r","status","keyDownHandler","e","code","keyUpHandler","mouseMoveHandler","relativeX","clientX","offsetLeft","collisionDetection","b","alert","location","reload","drawBall","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawPaddle","rect","drawBricks","brickX","brickY","drawScore","font","fillText","drawLives","draw","clearRect","requestAnimationFrame","addEventListener"],"version":3,"file":"arkanoid.3451fb83.js.map"}