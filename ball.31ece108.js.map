{"mappings":"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","sources":["src/js/ball/ball.js","src/js/engine/vector-2.js","src/js/engine/entity/entity.js","src/js/engine/entity/entity-v3.js","src/js/engine/ball/ball-v3.js","src/js/engine/game.js","src/js/engine/timer.js","src/js/engine/ball/ball.js","src/js/engine/ball/ball-render-v2.js","src/js/engine/wall-collision/wall-collision.js","src/js/engine/printer.js","src/js/engine/keys-input-handler.js","src/js/engine/ball/ball-input-handler-v2.js","src/js/engine/canvas-data.js","src/js/ball/Menu.js","src/js/engine/multi-canvas-data.js","src/js/engine/game-v2.js","src/js/ball/ball-factory.js"],"sourcesContent":["import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport { Game2 } from '../engine/game-v2.js';\r\nimport { BallFactory } from './ball-factory.js';\r\nimport { MultiCanvasData } from '../engine/multi-canvas-data.js';\r\nimport { Menu } from './Menu.js';\r\n\r\nnew Menu().hide();\r\nconst views = new MultiCanvasData();\r\nconst game = new Game2(new BallFactory(views));\r\n\r\nfunction animate(timestamp) {\r\n  game?.update(timestamp);\r\n  game?.draw();\r\n  requestAnimationFrame(animate);\r\n};\r\n\r\nanimate(0);","\r\nexport class Vector2 {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  mag() {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  normalize() {\r\n    const mag = this.mag();\r\n    const nv = new Vector2();\r\n    nv.x = this.x / mag;\r\n    nv.y = this.y / mag;\r\n    return nv;\r\n  }\r\n\r\n  log() {\r\n    console.log(`(${this.x}, ${this.y})`);\r\n  }\r\n}","import { Vector2 } from \"../vector-2.js\";\r\n\r\nexport class Entity {\r\n  #initPos;\r\n\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    this.gameSize = gameSize;\r\n    this.position = position;\r\n    this.#initPos = new Vector2(position.x, position.y);\r\n    this.size = size;\r\n    this.speed = speed;\r\n    this.inputHandler = inputHandler;\r\n    this.render = render;\r\n    this.printer = printer;\r\n    this.textPos = textPos;\r\n    this.color = \"green\";\r\n    this.infoColor = \"white\";\r\n    this.name = 'entity';\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler.handleInput(this);\r\n    this.position.y -= timer.deltaTime * this.speed.y;\r\n    this.#setConstraints();\r\n  }\r\n\r\n  reverseXSpeed() {\r\n    this.speed.x *= -1;\r\n  }\r\n\r\n  reverseYSpeed() {\r\n    this.speed.y *= -1;\r\n  }\r\n\r\n  #setConstraints() {\r\n    if (this.position.y <= this.size.y / 2) {\r\n      this.position.y = this.size.y / 2;\r\n    }\r\n    if (this.position.y >= this.gameSize.y - this.size.y / 2) {\r\n      this.position.y = this.gameSize.y - this.size.y / 2;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.position.x = this.#initPos.x;\r\n    this.position.y = this.#initPos.y;\r\n    this.speed.x = 0;\r\n    this.speed.y = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.render.draw(ctx, this);\r\n    this.drawInfo();\r\n  }\r\n\r\n  drawInfo() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('   ')}`\r\n        , this.textPos.x, this.textPos.y + (i * 40) + 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - size (${this.size.x.toFixed(0)}, ${this.size.y.toFixed(0)}), vel (${this.speed.x.toFixed(2)}, ${this.speed.y.toFixed(2)}), pos (${this.position.x.toFixed(0)}, ${this.position.y.toFixed(0)})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Entity } from \"./entity.js\";\r\n\r\nexport class EntityV3 extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos);\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.renderers['graphics'].draw(ctx, this);\r\n  }\r\n\r\n  drawText(ctx) {\r\n    this.renderers['text'].draw(ctx, this);\r\n  }\r\n}","import { EntityV3 } from \"../entity/entity-v3.js\";\r\n\r\nexport class BallV3 extends EntityV3 {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos, wallCollision);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n    this.renderers = renderers;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision?.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`); \r\n    return info;\r\n  }\r\n}","import { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game {\r\n  constructor(gameFactory) {\r\n    this.gameFactory = gameFactory;\r\n    this.screen = gameFactory.screen;\r\n    this.timer = this.gameFactory.timer;\r\n    this.input = this.gameFactory.input;\r\n    this.ball = this.gameFactory.ball;\r\n    this.player1 = this.gameFactory.player1;\r\n    this.player2 = this.gameFactory.player2;\r\n    this.collisionLeft = this.gameFactory.collisionLeft;\r\n    this.collisionLeftRender = this.gameFactory.collisionLeftRender;\r\n    this.collisionRight = this.gameFactory.collisionRight;\r\n    this.collisionRightRender = this.gameFactory.collisionRightRender;\r\n    this.printer = this.gameFactory.printer;\r\n    this.pointCount = this.gameFactory.pointCount;\r\n    this.name = 'Game';\r\n  }\r\n\r\n  update(timestamp) {\r\n    this.timer.set(timestamp);\r\n    if (false) this.timer.log();\r\n    if (this.ball != null) this.ball.update(this.timer);\r\n    if (this.player1 != null) this.player1.update(this.timer);\r\n    if (this.player2 != null) this.player2.update(this.timer);\r\n    if (this.collisionLeft != null && this.ball != null && this.player1 != null)\r\n      this.collisionLeft.calculateCollision(this.player1, this.ball);\r\n    if (\r\n      this.collisionRight != null &&\r\n      this.ball != null &&\r\n      this.player2 != null\r\n    )\r\n      this.collisionRight.calculateCollision(this.player2, this.ball);\r\n    this.pointCount?.update();\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.screen.gameCtx);\r\n    if (this.player1 != null) this.player1.draw(this.screen.gameCtx);\r\n    if (this.player2 != null) this.player2.draw(this.screen.gameCtx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.screen.gameCtx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.screen.textCtx);\r\n    this._print();\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.screen.gameCtx.clearRect(0, 0, this.screen.gameSize.x, this.screen.gameSize.y);\r\n    this.screen.textCtx.clearRect(0, 0, this.screen.textSize.x, this.screen.textSize.y);\r\n  }\r\n\r\n  _print() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('     ')}`\r\n        , 5, 20 + i * 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        'test'\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _drawPoints(ctx, isOn = false) {\r\n    if (!isOn) return;\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(this.screen.gameSize.x / 2 - .5, this.screen.gameSize.y / 2 - .5, 1, 1);\r\n  }\r\n}","export class Timer {\r\n  constructor() {\r\n    this.deltaTime = 0;\r\n    this.lastTime = 0;\r\n  }\r\n\r\n  set(timestamp) {\r\n    const delta = timestamp - this.lastTime;\r\n    if(delta < 20)\r\n      this.deltaTime = delta;\r\n    this.lastTime = timestamp;\r\n  }\r\n\r\n  log() {\r\n    console.log(this.deltaTime);\r\n  }\r\n}","import { Entity } from \"../entity/entity.js\";\r\n\r\nexport class Ball extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, render, printer, textPos);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`);\r\n    return info;\r\n  }\r\n}","export class BallRender2 {\r\n    draw(ctx, ball) {\r\n        if (ball.size.x != ball.size.y)\r\n            throw \"This collider works only for rectangles!\";\r\n        this.#drawBall(ctx, ball);\r\n        this.#drawPossition(ctx, ball);\r\n    }\r\n\r\n    #drawBall(ctx, ball) {\r\n        var rectSize = ball.size.x;\r\n        ctx.fillStyle = \"green\";\r\n        ctx.fillRect(\r\n            ball.position.x - rectSize / 2,\r\n            ball.position.y - rectSize / 2,\r\n            rectSize,\r\n            rectSize\r\n        );\r\n    }\r\n\r\n    #drawPossition(ctx, ball) {\r\n        ctx.fillStyle = \"yellow\";\r\n        ctx.fillRect(ball.position.x - 5 / 2, ball.position.y - 5 / 2, 5, 5);\r\n    }\r\n}","\r\nexport class WallCollision {\r\n\r\n  constructor() {\r\n    this.log = '';\r\n  }\r\n\r\n  calculateCollision(ball) {\r\n    if (ball.size.x != ball.size.y)\r\n      throw 'This collider works only for rectangles!';\r\n\r\n    const ballSize = ball.size.x / 2;\r\n    const gameSize = ball.gameSize;\r\n\r\n    if (ball.position.x <= ballSize) {\r\n      ball.position.x = ballSize;\r\n      this.log = 'left';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.x >= gameSize.x - ballSize) {\r\n      ball.position.x = gameSize.x - ballSize;\r\n      this.log = 'right';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.y <= ballSize) {\r\n      ball.position.y = ballSize;\r\n      this.log = 'top';\r\n      ball.reverseYSpeed();\r\n    }\r\n    if (ball.position.y >= gameSize.y - ballSize) {\r\n      ball.position.y = gameSize.y - ballSize;\r\n      this.log = 'bottom';\r\n      ball.reverseYSpeed();\r\n    }\r\n  }\r\n}","export class Printer {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.setPrint('left', 'normal 12px Arial');\r\n  }\r\n\r\n  setPrint(align, font) {\r\n    this.ctx.textAlign = align;\r\n    this.ctx.font = font;\r\n  }\r\n\r\n  print(text, x, y, color) {\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillText(text, x, y);\r\n  }\r\n\r\n  printInLines(infoArray, color, dy, x0, y0) {\r\n    let y = y0;\r\n    infoArray.forEach(element => {\r\n      this.print(element, x0, y, color);\r\n      y += dy;\r\n    });\r\n  }\r\n}","\r\nexport class KeysInputHandler {\r\n\r\n  constructor() {\r\n    this.keys = [];\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (\r\n        (e.key === \"ArrowDown\" ||\r\n          e.key === \"ArrowUp\" ||\r\n          e.key === \"ArrowLeft\" ||\r\n          e.key === \"ArrowRight\") &&\r\n        this.keys.indexOf(e.key) === -1\r\n      ) {\r\n        this.keys.push(e.key);\r\n      }\r\n    });\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      if (\r\n        e.key === \"ArrowDown\" ||\r\n        e.key === \"ArrowUp\" ||\r\n        e.key === \"ArrowLeft\" ||\r\n        e.key === \"ArrowRight\"\r\n      ) {\r\n        this.keys.splice(this.keys.indexOf(e.key), 1);\r\n      }\r\n    });\r\n  }\r\n}","\r\nexport class BallInputHandler2 {\r\n  constructor(input) {\r\n    this.input = input;\r\n  }\r\n\r\n  handleInput(ball) {\r\n    if (ball.speed.x > 0 && this.#checkKey(\"ArrowLeft\")) {\r\n      this.#revSpeedX(ball);\r\n    }\r\n    else if (ball.speed.x < 0 && this.#checkKey(\"ArrowRight\")) {\r\n      this.#revSpeedX(ball);\r\n    }\r\n    else if (ball.speed.y > 0 && this.#checkKey(\"ArrowUp\")) {\r\n      this.#revSpeedY(ball);\r\n    }\r\n    else if (ball.speed.y < 0 && this.#checkKey(\"ArrowDown\")) {\r\n      this.#revSpeedY(ball);\r\n    }\r\n  }\r\n\r\n  #checkKey(keyName) {\r\n    return this.input.keys.indexOf(keyName) > -1;\r\n  }\r\n\r\n  #revSpeedY(ball) {\r\n    ball.speed.y = -ball.speed.y;\r\n  }\r\n\r\n  #revSpeedX(ball) {\r\n    ball.speed.x = -ball.speed.x;\r\n  }\r\n}","\r\nexport class CanvasData {\r\n  #canvasId;\r\n  #size;\r\n  #canvas;\r\n  #ctx;\r\n\r\n  constructor(canvasId, size) {\r\n    this.#canvasId = canvasId;\r\n    this.#size = size;\r\n  }\r\n\r\n  get canvasId() {\r\n    return this.#canvasId;\r\n  }\r\n\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n\r\n  get canvas() {\r\n    return this.#canvas;\r\n  }\r\n\r\n  get ctx() {\r\n    return this.#ctx;\r\n  }\r\n\r\n  setCanvas() {\r\n    this.#canvas = document.getElementById(this.#canvasId);\r\n    this.#canvas.width = this.#size.x;\r\n    this.#canvas.height = this.#size.y;\r\n    this.#ctx = this.#canvas.getContext('2d');\r\n  }\r\n}","'use strict';\r\n\r\nconst hide = 'hide';\r\nconst selectGame = 'select-controls-game';\r\nconst selectPlayer = 'select-controls-player';\r\nconst menuContainer = 'menu-container';\r\nconst menuButtons = 'menu-btns';\r\nconst btnStart = 'btn-start';\r\nconst btnReset = 'btn-reset';\r\nconst btnOverlay = 'btn-overlay';\r\n\r\nexport class Menu {\r\n  #menuContainer;\r\n  #menuBtns;\r\n  #btnStart;\r\n  #btnReset;\r\n  #btnOverlay;\r\n  #selectConstrols;\r\n  #callback;\r\n\r\n  static get hide() { return hide;}\r\n  static get selectGame() { return selectGame;}\r\n  static get selectPlayer() { return selectPlayer;}\r\n  static get menuContainer() { return menuContainer; }\r\n  static get btnStart() { return btnStart; }\r\n  static get btnReset() { return btnReset; }\r\n  static get btnOverlay() { return btnOverlay; }\r\n\r\n  constructor(onControlsChange) {\r\n    this.#callback = onControlsChange;\r\n    this.#menuContainer = document.getElementById(menuContainer);\r\n    this.#menuBtns = document.getElementById(menuButtons);\r\n    this.#btnStart = document.getElementById(btnStart);\r\n    this.#btnReset = document.getElementById(btnReset);\r\n    this.#btnOverlay = document.getElementById(btnOverlay);\r\n    this.#setSelectGetters();\r\n    this.#selectConstrols = document.getElementById('select-controls-container');\r\n  }\r\n\r\n  #setSelectGetters() {\r\n    HTMLSelectElement.prototype.__defineGetter__(\"val\", function () {\r\n      return this.options[this.selectedIndex].value;\r\n    });\r\n    HTMLSelectElement.prototype.__defineGetter__(\"text\", function () {\r\n      return this.options[this.selectedIndex].text;\r\n    });\r\n  }\r\n\r\n  setPlayerView(onControlsChange) {\r\n    this.#callback(this.#selectConstrols.childNodes[3].val);\r\n    this.#btnStart.classList.add(hide);\r\n    this.#btnReset.classList.add(hide);\r\n    this.#btnOverlay.classList.add(hide);\r\n    this.#selectConstrols.classList.add(selectPlayer);\r\n    this.#setSelectConstorls(onControlsChange);\r\n  }\r\n\r\n  setGameView() {\r\n    this.#menuContainer.classList.remove(hide);\r\n    this.#menuBtns.classList.remove(hide);\r\n    this.#btnStart.classList.remove(hide);\r\n    this.#btnReset.classList.remove(hide);\r\n    this.#btnOverlay.classList.remove(hide);\r\n  }\r\n\r\n  hide() {\r\n    this.#btnStart.classList.add(hide);\r\n    this.#btnReset.classList.add(hide);\r\n    this.#btnOverlay.classList.add(hide);\r\n    this.#selectConstrols.classList.add(hide);\r\n  }\r\n\r\n  #setSelectConstorls() {\r\n    this.#selectConstrols.addEventListener('change', (e) => {\r\n      this.#callback(e.target.value);\r\n    });\r\n  }\r\n}\r\n","import { CanvasData } from './canvas-data.js';\r\nimport { Vector2 } from './vector-2.js';\r\n\r\nexport class MultiCanvasData {\r\n  #key;\r\n  #data;\r\n\r\n  constructor() {\r\n    this.#key = \"laptop\";\r\n    this.#data = new Map();\r\n    this.#init();\r\n  }\r\n\r\n  #init() {\r\n    this.#add('laptop-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(800, 600)));\r\n\r\n    this.#add('laptop-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(650, 500)));\r\n\r\n    this.#add('laptop-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(800, 90)));\r\n\r\n    this.#add('phone-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(300, 300)));\r\n\r\n    this.#add('phone-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(500, 500)));\r\n\r\n    this.#add('phone-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(300, 90)));\r\n\r\n    this.get('game').setCanvas();\r\n    this.get('info').setCanvas();\r\n    this.get('points').setCanvas();\r\n  }\r\n\r\n  #add(id, canvasData) {\r\n    this.#data.set(id, canvasData);\r\n  }\r\n\r\n  get(name) {\r\n    return this.#data.get(`${this.#key}-${name}`);\r\n  }\r\n}","import { Game } from './game.js';\r\nimport { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game2 extends Game {\r\n\r\n  #print;\r\n\r\n  constructor(gameFactory, print = true) {\r\n    super(gameFactory);\r\n    this.#print = print;\r\n    this.views = gameFactory.views;\r\n    this.infoCanvas = this.views.get('info');\r\n    this.gameCanvas = this.views.get('game');\r\n    this.pointsCanvas = this.views.get('points');\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.gameCanvas.ctx);\r\n    if (this.player1 != null) this.player1.draw(this.gameCanvas.ctx);\r\n    if (this.player2 != null) this.player2.draw(this.gameCanvas.ctx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.gameCanvas.ctx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.infoCanvas.ctx);\r\n    if (this.input?.draw) this.input?.draw();\r\n    this.#print ? this._print() : {};\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - game-canvas (${this.gameCanvas.size.x}, ${this.gameCanvas.size.y}), info-canvas (${this.infoCanvas.size.x}, ${this.infoCanvas.size.y}), points-canvas (${this.pointsCanvas.size.x}, ${this.pointsCanvas.size.y})`\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.gameCanvas.ctx.clearRect(0, 0, this.gameCanvas.size.x, this.gameCanvas.size.y);\r\n    this.infoCanvas.ctx.clearRect(0, 0, this.infoCanvas.size.x, this.infoCanvas.size.y);\r\n    this.pointsCanvas.ctx.clearRect(0, 0, this.pointsCanvas.size.x, this.pointsCanvas.size.y);\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\nimport { KeysInputHandler } from \"../engine/keys-input-handler.js\";\r\nimport { BallInputHandler2 } from \"../engine/ball/ball-input-handler-v2.js\";\r\n\r\nexport class BallFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.input = new KeysInputHandler();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    const size = new Vector2(100, 100);\r\n    const position = new Vector2(this.gameCanvas.size.x / 2, this.gameCanvas.size.y / 2);\r\n    const velocity = new Vector2(0.5, 0.5);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      position,\r\n      size,\r\n      velocity,\r\n      new BallInputHandler2(this.input)\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision()\r\n    );\r\n  }\r\n}"],"names":["parcelRequire","$d70316a6624f97ad$export$c977b3e384af9ae1","constructor","x","y","this","mag","Math","sqrt","normalize","nv","log","console","$db66411ee626ebf2$export$bc644a473284d944","initPos","gameSize","position","size","speed","inputHandler","render","printer","textPos","color","infoColor","name","update","timer","handleInput","deltaTime","setConstraints","reverseXSpeed","reverseYSpeed","reset","draw","ctx","drawInfo","p","data","getInfo","i","length","print","join","toFixed","$19a6fdda0539b4b0$export$bb6128256e450d57","renderers","super","drawText","$de4f6cf5c1392042$export$d9d3d6299ea1a309","wallCollision","setPosition","calculateCollision","info","concat","$ba252004c39b4a58$export$985739bfa5723e08","gameFactory","screen","input","ball","player1","player2","collisionLeft","collisionLeftRender","collisionRight","collisionRightRender","pointCount","timestamp","set","_clearCtx","gameCtx","_drawPoints","textCtx","_print","clearRect","textSize","isOn","fillStyle","fillRect","$ab3d881720504dd4$export$c57e9b2d8b9e4de","lastTime","delta","$3fc1d9742cbd1efb$export$a83d7c3fa53790c9","$4b7c158a692a137d$export$60583e758e72954f","drawBall","drawPossition","rectSize","ctx1","ball1","$ae5800cad9cad6c6$export$84dfbe767db39e23","ballSize","$c45ade8dc93d5d6d$export$ff97ddd7b62e4930","setPrint","align","font","textAlign","text","fillText","printInLines","infoArray","dy","x0","y0","forEach","element","$43384781123344f3$export$e9bcac4d908bd660","keys","window","addEventListener","e","key","indexOf","push","splice","$9c19151c9fd65b31$export$1289f64e305ae582","checkKey","revSpeedX","revSpeedY","keyName","$6d9958fa14cad325$export$79b2296d3374d147","canvasId","canvas","setCanvas","document","getElementById","width","height","getContext","$51b731df2d07c2dc$var$hide","$51b731df2d07c2dc$var$selectPlayer","$51b731df2d07c2dc$var$menuContainer","$51b731df2d07c2dc$var$btnStart","$51b731df2d07c2dc$var$btnReset","$51b731df2d07c2dc$var$btnOverlay","menuContainer","menuBtns","btnStart","btnReset","btnOverlay","selectConstrols","callback","hide","selectGame","selectPlayer","onControlsChange","setSelectGetters","HTMLSelectElement","prototype","__defineGetter__","options","selectedIndex","value","setPlayerView","childNodes","val","classList","add","setSelectConstorls","setGameView","remove","target","$af4da5c2a5bcda5d$var$views","Map","init","get","id","canvasData","$af4da5c2a5bcda5d$var$game","views","infoCanvas","gameCanvas","pointsCanvas","velocity","$af4da5c2a5bcda5d$var$animate","requestAnimationFrame"],"version":3,"file":"ball.31ece108.js.map"}