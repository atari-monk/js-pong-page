var i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},s={},e=i.parcelRequire3f2e;null==e&&((e=function(i){if(i in t)return t[i].exports;if(i in s){var e=s[i];delete s[i];var n={id:i,exports:{}};return t[i]=n,e.call(n.exports,n,n.exports),n.exports}var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}).register=function(i,t){s[i]=t},i.parcelRequire3f2e=e),e("3gXC5"),e("ic7rk"),e("9NZOq");class n{constructor(i,t){this.x=i,this.y=t}mag(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const i=this.mag(),t=new n;return t.x=this.x/i,t.y=this.y/i,t}log(){console.log(`(${this.x}, ${this.y})`)}}class l{#i;constructor(i,t,s,e,l,a,o,h){this.gameSize=i,this.position=t,this.#i=new n(t.x,t.y),this.size=s,this.speed=e,this.inputHandler=l,this.render=a,this.printer=o,this.textPos=h,this.color="green",this.infoColor="white",this.name="entity"}update(i){this.inputHandler.handleInput(this),this.position.y-=i.deltaTime*this.speed.y,this.#t()}reverseXSpeed(){this.speed.x*=-1}reverseYSpeed(){this.speed.y*=-1}#t(){this.position.y<=this.size.y/2&&(this.position.y=this.size.y/2),this.position.y>=this.gameSize.y-this.size.y/2&&(this.position.y=this.gameSize.y-this.size.y/2)}reset(){this.position.x=this.#i.x,this.position.y=this.#i.y,this.speed.x=0,this.speed.y=0}draw(i){this.render.draw(i,this),this.drawInfo()}drawInfo(){const i=this.printer,t=this.getInfo();for(let s=0;s<t.length;s++)i?.print(`${t[s].join("   ")}`,this.textPos.x,this.textPos.y+40*s+40,this.infoColor)}getInfo(){return[[`${this.name} - size (${this.size.x.toFixed(0)}, ${this.size.y.toFixed(0)}), vel (${this.speed.x.toFixed(2)}, ${this.speed.y.toFixed(2)}), pos (${this.position.x.toFixed(0)}, ${this.position.y.toFixed(0)})`]]}}class a extends l{constructor(i,t,s,e,n,l,a,o){super(i,t,s,e,n,l.graphics,a,o)}draw(i){this.renderers.graphics.draw(i,this)}drawText(i){this.renderers.text.draw(i,this)}}class o extends a{constructor(i,t,s,e,n,l,a,o,h){super(i,t,s,e,n,l.graphics,a,o,h),this.name="Ball",this.wallCollision=h,this.renderers=l}update(i){this.inputHandler?.handleInput(this),this.#s(i),this.wallCollision?.calculateCollision(this)}#s(i){this.position.x+=i.deltaTime*this.speed.x,this.position.y+=i.deltaTime*this.speed.y}getInfo(){const i=super.getInfo();return i[0][0]=i[0][0].concat(`, wall (${this.wallCollision.log})`),i}}class h{constructor(i){this.gameFactory=i,this.screen=i.screen,this.timer=this.gameFactory.timer,this.input=this.gameFactory.input,this.ball=this.gameFactory.ball,this.player1=this.gameFactory.player1,this.player2=this.gameFactory.player2,this.collisionLeft=this.gameFactory.collisionLeft,this.collisionLeftRender=this.gameFactory.collisionLeftRender,this.collisionRight=this.gameFactory.collisionRight,this.collisionRightRender=this.gameFactory.collisionRightRender,this.printer=this.gameFactory.printer,this.pointCount=this.gameFactory.pointCount,this.name="Game"}update(i){this.timer.set(i),null!=this.ball&&this.ball.update(this.timer),null!=this.player1&&this.player1.update(this.timer),null!=this.player2&&this.player2.update(this.timer),null!=this.collisionLeft&&null!=this.ball&&null!=this.player1&&this.collisionLeft.calculateCollision(this.player1,this.ball),null!=this.collisionRight&&null!=this.ball&&null!=this.player2&&this.collisionRight.calculateCollision(this.player2,this.ball),this.pointCount?.update()}draw(){this._clearCtx(),null!=this.ball&&this.ball.draw(this.screen.gameCtx),null!=this.player1&&this.player1.draw(this.screen.gameCtx),null!=this.player2&&this.player2.draw(this.screen.gameCtx),null!=this.collisionLeftRender&&this.collisionLeftRender.draw(),null!=this.collisionRightRender&&this.collisionRightRender.draw(),this.collisionLeft?.draw(),this.collisionRight?.draw(),this.pointCount?.draw(),this._drawPoints(this.screen.gameCtx),this.ball instanceof o&&this.ball?.drawText(this.screen.textCtx),this._print()}_clearCtx(){this.screen.gameCtx.clearRect(0,0,this.screen.gameSize.x,this.screen.gameSize.y),this.screen.textCtx.clearRect(0,0,this.screen.textSize.x,this.screen.textSize.y)}_print(){const i=this.printer,t=this.getInfo();for(let s=0;s<t.length;s++)i?.print(`${t[s].join("     ")}`,5,20+40*s,this.infoColor)}getInfo(){return[["test"]]}_drawPoints(i,t=!1){t&&(i.fillStyle="white",i.fillRect(this.screen.gameSize.x/2-.5,this.screen.gameSize.y/2-.5,1,1))}}class r{constructor(){this.deltaTime=0,this.lastTime=0}set(i){const t=i-this.lastTime;t<20&&(this.deltaTime=t),this.lastTime=i}log(){console.log(this.deltaTime)}}class c{handleInput(){}}class p{constructor(){this.keys=[],window.addEventListener("keydown",(i=>{"ArrowDown"!==i.key&&"ArrowUp"!==i.key&&"ArrowLeft"!==i.key&&"ArrowRight"!==i.key||-1!==this.keys.indexOf(i.key)||this.keys.push(i.key)})),window.addEventListener("keyup",(i=>{"ArrowDown"!==i.key&&"ArrowUp"!==i.key&&"ArrowLeft"!==i.key&&"ArrowRight"!==i.key||this.keys.splice(this.keys.indexOf(i.key),1)}))}}class d extends l{constructor(i,t,s,e,n,l,a,o,h){super(i,t,s,e,n,l,a,o),this.name="Ball",this.wallCollision=h}update(i){this.inputHandler?.handleInput(this),this.#s(i),this.wallCollision.calculateCollision(this)}#s(i){this.position.x+=i.deltaTime*this.speed.x,this.position.y+=i.deltaTime*this.speed.y}getInfo(){const i=super.getInfo();return i[0][0]=i[0][0].concat(`, wall (${this.wallCollision.log})`),i}}class y{drawRect(i,t,s,e,n){i.fillStyle=n,i.fillRect(t-e/2,s-e/2,e,e)}}class g extends y{draw(i,t){this.drawRect(i,t.position.x,t.position.y,t.size.x,"red")}}class x{constructor(){this.log=""}calculateCollision(i){if(i.size.x!=i.size.y)throw"This collider works only for rectangles!";const t=i.size.x/2,s=i.gameSize;i.position.x<=t&&(i.position.x=t,this.log="left",i.reverseXSpeed()),i.position.x>=s.x-t&&(i.position.x=s.x-t,this.log="right",i.reverseXSpeed()),i.position.y<=t&&(i.position.y=t,this.log="top",i.reverseYSpeed()),i.position.y>=s.y-t&&(i.position.y=s.y-t,this.log="bottom",i.reverseYSpeed())}}class w extends l{constructor(i,t,s,e,n,l,a,o,h="Player"){super(i,t,s,e,n,l,a,o),this.name=h}}class u{constructor(i){this.input=i}handleInput(i){this.input.keys.indexOf("ArrowUp")>-1?i.speed.y=1:this.input.keys.indexOf("ArrowDown")>-1?i.speed.y=-1:i.speed.y=0}}class C{constructor(i){this.printer=i,this.ballY1=0,this.playerY1=0,this.ballY2=0,this.playerY2=0,this.ballX=0,this.playerX=0,this.xCollision=!1,this.yCollision=!1,this.xyCollision=!1,this.regionX=!1,this.regionY=!1,this.region=!1}calculateCollision(i,t){this.#e(i,t),this.#n(t),this.region&&(this.#l(),this.#a(),this.xyCollision=this.xCollision&&this.yCollision,this.xyCollision&&t.reverseXSpeed())}#e(i,t){this.ballX=t.position.x-t.size.x/2,this.playerX=i.position.x+i.size.x/2,this.ballY1=t.position.y-t.size.x/2,this.ballY2=t.position.y+t.size.x/2,this.playerY1=i.position.y-i.size.y/2,this.playerY2=i.position.y+i.size.y/2}#n(i){this.regionX=this.ballX>=this.playerX-i.size.x/2&&this.ballX<=this.playerX+2*i.size.x,this.regionY=this.ballY1>=this.playerY1-i.size.x&&this.ballY1<=this.playerY2+i.size.x&&this.ballY2>=this.playerY1-i.size.x&&this.ballY2<=this.playerY2+i.size.x,this.region=this.regionX&&this.regionY}#l(){this.xCollision=this.ballX<=this.playerX}#a(){this.yCollision=(this.playerY1<=this.ballY1||this.playerY1<=this.ballY2)&&(this.playerY2>=this.ballY2||this.playerY2>=this.ballY1)}draw(){this.printer.print(`BallColl - ${this.getInfo()[0].join(", ")}`,5,95,"white"),this.printer.print(`BallColl - ${this.getInfo()[1].join(", ")}`,5,120,"white"),this.printer.print(`BallColl - ${this.getInfo()[2].join(", ")}`,5,145,"white")}getInfo(){return[[`ball x ${this.ballX.toFixed(0)}, y1 ${this.ballY1.toFixed(0)}, y2 ${this.ballY2.toFixed(0)}`],[`player x ${this.playerX.toFixed(0)}, y1 ${this.playerY1.toFixed(0)}, y2 ${this.playerY2.toFixed(0)}`],[`regionXY (${this.regionX}, ${this.regionY})`,`collXY (${this.xCollision}, ${this.yCollision})`,`region (${this.region})`,`coll (${this.xyCollision})`]]}}class f{constructor(i,t){this.ctx=i,this.pongCollision=t}draw(){this.pongCollision.region&&this.#o()}#o(){this.ctx.fillStyle="red",this.ctx.fillRect(this.pongCollision.ballX-2.5,this.pongCollision.ballY1-2.5,5,5),this.ctx.fillRect(this.pongCollision.ballX-2.5,this.pongCollision.ballY2-2.5,5,5),this.ctx.fillRect(this.pongCollision.playerX-2.5,this.pongCollision.playerY1-2.5,5,5),this.ctx.fillRect(this.pongCollision.playerX-2.5,this.pongCollision.playerY2-2.5,5,5)}}class m{draw(i,t){i.fillStyle="green",i.fillRect(t.position.x-t.size.x/2,t.position.y-t.size.y/2,t.size.x,t.size.y)}}class v{constructor(i){this.ctx=i,this.setPrint("left","normal 12px Arial")}setPrint(i,t){this.ctx.textAlign=i,this.ctx.font=t}print(i,t,s,e){this.ctx.fillStyle=e,this.ctx.fillText(i,t,s)}printInLines(i,t,s,e,n){let l=n;i.forEach((i=>{this.print(i,e,l,t),l+=s}))}}class z{#h;#r;#c;#p;constructor(i,t){this.#h=i,this.#r=t}get canvasId(){return this.#h}get size(){return this.#r}get canvas(){return this.#c}get ctx(){return this.#p}setCanvas(){this.#c=document.getElementById(this.#h),this.#c.width=this.#r.x,this.#c.height=this.#r.y,this.#p=this.#c.getContext("2d")}}const b=new class{#d;#y;constructor(){this.#d="laptop",this.#y=new Map,this.#g()}#g(){this.#x("laptop-game",new z("game-canvas",new n(800,600))),this.#x("laptop-info",new z("info-canvas",new n(650,500))),this.#x("laptop-points",new z("points-canvas",new n(800,90))),this.#x("phone-game",new z("game-canvas",new n(300,300))),this.#x("phone-info",new z("info-canvas",new n(500,500))),this.#x("phone-points",new z("points-canvas",new n(300,90))),this.get("game").setCanvas(),this.get("info").setCanvas(),this.get("points").setCanvas()}#x(i,t){this.#y.set(i,t)}get(i){return this.#y.get(`${this.#d}-${i}`)}};var R=new class extends h{#w;constructor(i,t=!0){super(i),this.#w=t,this.views=i.views,this.infoCanvas=this.views.get("info"),this.gameCanvas=this.views.get("game"),this.pointsCanvas=this.views.get("points")}draw(){this._clearCtx(),null!=this.ball&&this.ball.draw(this.gameCanvas.ctx),null!=this.player1&&this.player1.draw(this.gameCanvas.ctx),null!=this.player2&&this.player2.draw(this.gameCanvas.ctx),null!=this.collisionLeftRender&&this.collisionLeftRender.draw(),null!=this.collisionRightRender&&this.collisionRightRender.draw(),this.collisionLeft?.draw(),this.collisionRight?.draw(),this.pointCount?.draw(),this._drawPoints(this.gameCanvas.ctx),this.ball instanceof o&&this.ball?.drawText(this.infoCanvas.ctx),this.input?.draw&&this.input?.draw(),this.#w&&this._print()}getInfo(){return[[`${this.name} - game-canvas (${this.gameCanvas.size.x}, ${this.gameCanvas.size.y}), info-canvas (${this.infoCanvas.size.x}, ${this.infoCanvas.size.y}), points-canvas (${this.pointsCanvas.size.x}, ${this.pointsCanvas.size.y})`]]}_clearCtx(){this.gameCanvas.ctx.clearRect(0,0,this.gameCanvas.size.x,this.gameCanvas.size.y),this.infoCanvas.ctx.clearRect(0,0,this.infoCanvas.size.x,this.infoCanvas.size.y),this.pointsCanvas.ctx.clearRect(0,0,this.pointsCanvas.size.x,this.pointsCanvas.size.y)}}(new class{constructor(i){this.views=i,this.infoCanvas=i.get("info"),this.gameCanvas=i.get("game"),this.timer=new r,this.printer=new v(this.infoCanvas.ctx),this.input=new p,this.ball=new d(this.gameCanvas.size,new n(this.gameCanvas.size.x-45,this.gameCanvas.size.y/2),new n(10,10),new n(.3,.3),new c,new g,this.printer,new n(5,5),new x),this.player1=new w(this.gameCanvas.size,new n(this.gameCanvas.size.x/2-100,this.gameCanvas.size.y/2),new n(10,100),new n(0,0),new u(this.input),new m,this.printer,new n(5,30)),this.collisionLeft=new C(this.printer),this.collisionLeftRender=new f(this.gameCanvas.ctx,this.collisionLeft)}}(b));!function i(t){R.update(t),R.draw(),requestAnimationFrame(i)}(0);
//# sourceMappingURL=my-collision-proto.e7449fc6.js.map
