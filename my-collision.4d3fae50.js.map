{"mappings":"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","sources":["src/js/my-collision/my-collision.js","src/js/engine/vector-2.js","src/js/engine/entity/entity.js","src/js/engine/entity/entity-v3.js","src/js/engine/ball/ball-v3.js","src/js/engine/game.js","src/js/engine/game-v2.js","src/js/engine/timer.js","src/js/engine/input-handler-empty.js","src/js/engine/keys-input-handler.js","src/js/engine/ball/ball.js","src/js/engine/ball/ball-input-handler-v3.js","src/js/engine/ball/ball-render-v2.js","src/js/engine/wall-collision/wall-collision.js","src/js/engine/player/player.js","src/js/engine/ball-collision/ball-collision-render.js","src/js/engine/player/player-render.js","src/js/engine/printer.js","src/js/engine/ball-collision/ball-collision-left.js","src/js/my-collision/left-factory.js","src/js/engine/ball-collision/ball-collision-right.js","src/js/my-collision/right-factory.js","src/js/engine/canvas-data.js","src/js/my-collision/menu.js","src/js/engine/multi-canvas-data.js"],"sourcesContent":["'use strict';\r\n\r\nimport 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport { Game2 } from '../engine/game-v2.js';\r\nimport { LeftFactory } from './left-factory.js';\r\nimport { RightFactory } from './right-factory.js';\r\nimport { MultiCanvasData } from '../engine/multi-canvas-data.js';\r\nimport { Menu } from './menu.js';\r\n\r\nlet game, factory;\r\nconst views = new MultiCanvasData();\r\nconst menu = new Menu(onControlsChange);\r\nmenu.setMyCollisionView();\r\n\r\nfunction onControlsChange(value) {\r\n  switch (value) {\r\n    case 'left':\r\n      factory = new LeftFactory(views);\r\n      break;\r\n    case 'right':\r\n      factory = new RightFactory(views);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  game = new Game2(factory);\r\n}\r\n\r\nfunction animate(timestamp) {\r\n  game.update(timestamp);\r\n  game.draw();\r\n  requestAnimationFrame(animate);\r\n};\r\n\r\nanimate(0);","\r\nexport class Vector2 {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  mag() {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  normalize() {\r\n    const mag = this.mag();\r\n    const nv = new Vector2();\r\n    nv.x = this.x / mag;\r\n    nv.y = this.y / mag;\r\n    return nv;\r\n  }\r\n\r\n  log() {\r\n    console.log(`(${this.x}, ${this.y})`);\r\n  }\r\n}","import { Vector2 } from \"../vector-2.js\";\r\n\r\nexport class Entity {\r\n  #initPos;\r\n\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    this.gameSize = gameSize;\r\n    this.position = position;\r\n    this.#initPos = new Vector2(position.x, position.y);\r\n    this.size = size;\r\n    this.speed = speed;\r\n    this.inputHandler = inputHandler;\r\n    this.render = render;\r\n    this.printer = printer;\r\n    this.textPos = textPos;\r\n    this.color = \"green\";\r\n    this.infoColor = \"white\";\r\n    this.name = 'entity';\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler.handleInput(this);\r\n    this.position.y -= timer.deltaTime * this.speed.y;\r\n    this.#setConstraints();\r\n  }\r\n\r\n  reverseXSpeed() {\r\n    this.speed.x *= -1;\r\n  }\r\n\r\n  reverseYSpeed() {\r\n    this.speed.y *= -1;\r\n  }\r\n\r\n  #setConstraints() {\r\n    if (this.position.y <= this.size.y / 2) {\r\n      this.position.y = this.size.y / 2;\r\n    }\r\n    if (this.position.y >= this.gameSize.y - this.size.y / 2) {\r\n      this.position.y = this.gameSize.y - this.size.y / 2;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.position.x = this.#initPos.x;\r\n    this.position.y = this.#initPos.y;\r\n    this.speed.x = 0;\r\n    this.speed.y = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.render.draw(ctx, this);\r\n    this.drawInfo();\r\n  }\r\n\r\n  drawInfo() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('   ')}`\r\n        , this.textPos.x, this.textPos.y + (i * 40) + 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - size (${this.size.x.toFixed(0)}, ${this.size.y.toFixed(0)}), vel (${this.speed.x.toFixed(2)}, ${this.speed.y.toFixed(2)}), pos (${this.position.x.toFixed(0)}, ${this.position.y.toFixed(0)})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Entity } from \"./entity.js\";\r\n\r\nexport class EntityV3 extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos);\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.renderers['graphics'].draw(ctx, this);\r\n  }\r\n\r\n  drawText(ctx) {\r\n    this.renderers['text'].draw(ctx, this);\r\n  }\r\n}","import { EntityV3 } from \"../entity/entity-v3.js\";\r\n\r\nexport class BallV3 extends EntityV3 {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos, wallCollision);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n    this.renderers = renderers;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision?.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`); \r\n    return info;\r\n  }\r\n}","import { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game {\r\n  constructor(gameFactory) {\r\n    this.gameFactory = gameFactory;\r\n    this.screen = gameFactory.screen;\r\n    this.timer = this.gameFactory.timer;\r\n    this.input = this.gameFactory.input;\r\n    this.ball = this.gameFactory.ball;\r\n    this.player1 = this.gameFactory.player1;\r\n    this.player2 = this.gameFactory.player2;\r\n    this.collisionLeft = this.gameFactory.collisionLeft;\r\n    this.collisionLeftRender = this.gameFactory.collisionLeftRender;\r\n    this.collisionRight = this.gameFactory.collisionRight;\r\n    this.collisionRightRender = this.gameFactory.collisionRightRender;\r\n    this.printer = this.gameFactory.printer;\r\n    this.pointCount = this.gameFactory.pointCount;\r\n    this.name = 'Game';\r\n  }\r\n\r\n  update(timestamp) {\r\n    this.timer.set(timestamp);\r\n    if (false) this.timer.log();\r\n    if (this.ball != null) this.ball.update(this.timer);\r\n    if (this.player1 != null) this.player1.update(this.timer);\r\n    if (this.player2 != null) this.player2.update(this.timer);\r\n    if (this.collisionLeft != null && this.ball != null && this.player1 != null)\r\n      this.collisionLeft.calculateCollision(this.player1, this.ball);\r\n    if (\r\n      this.collisionRight != null &&\r\n      this.ball != null &&\r\n      this.player2 != null\r\n    )\r\n      this.collisionRight.calculateCollision(this.player2, this.ball);\r\n    this.pointCount?.update();\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.screen.gameCtx);\r\n    if (this.player1 != null) this.player1.draw(this.screen.gameCtx);\r\n    if (this.player2 != null) this.player2.draw(this.screen.gameCtx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.screen.gameCtx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.screen.textCtx);\r\n    this._print();\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.screen.gameCtx.clearRect(0, 0, this.screen.gameSize.x, this.screen.gameSize.y);\r\n    this.screen.textCtx.clearRect(0, 0, this.screen.textSize.x, this.screen.textSize.y);\r\n  }\r\n\r\n  _print() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('     ')}`\r\n        , 5, 20 + i * 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        'test'\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _drawPoints(ctx, isOn = false) {\r\n    if (!isOn) return;\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(this.screen.gameSize.x / 2 - .5, this.screen.gameSize.y / 2 - .5, 1, 1);\r\n  }\r\n}","import { Game } from './game.js';\r\nimport { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game2 extends Game {\r\n\r\n  #print;\r\n\r\n  constructor(gameFactory, print = true) {\r\n    super(gameFactory);\r\n    this.#print = print;\r\n    this.views = gameFactory.views;\r\n    this.infoCanvas = this.views.get('info');\r\n    this.gameCanvas = this.views.get('game');\r\n    this.pointsCanvas = this.views.get('points');\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.gameCanvas.ctx);\r\n    if (this.player1 != null) this.player1.draw(this.gameCanvas.ctx);\r\n    if (this.player2 != null) this.player2.draw(this.gameCanvas.ctx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.gameCanvas.ctx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.infoCanvas.ctx);\r\n    if (this.input?.draw) this.input?.draw();\r\n    this.#print ? this._print() : {};\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - game-canvas (${this.gameCanvas.size.x}, ${this.gameCanvas.size.y}), info-canvas (${this.infoCanvas.size.x}, ${this.infoCanvas.size.y}), points-canvas (${this.pointsCanvas.size.x}, ${this.pointsCanvas.size.y})`\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.gameCanvas.ctx.clearRect(0, 0, this.gameCanvas.size.x, this.gameCanvas.size.y);\r\n    this.infoCanvas.ctx.clearRect(0, 0, this.infoCanvas.size.x, this.infoCanvas.size.y);\r\n    this.pointsCanvas.ctx.clearRect(0, 0, this.pointsCanvas.size.x, this.pointsCanvas.size.y);\r\n  }\r\n}","export class Timer {\r\n  constructor() {\r\n    this.deltaTime = 0;\r\n    this.lastTime = 0;\r\n  }\r\n\r\n  set(timestamp) {\r\n    const delta = timestamp - this.lastTime;\r\n    if(delta < 20)\r\n      this.deltaTime = delta;\r\n    this.lastTime = timestamp;\r\n  }\r\n\r\n  log() {\r\n    console.log(this.deltaTime);\r\n  }\r\n}","\r\nexport class InputHandlerEmpty {\r\n    handleInput() {\r\n    }\r\n}\r\n","\r\nexport class KeysInputHandler {\r\n\r\n  constructor() {\r\n    this.keys = [];\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (\r\n        (e.key === \"ArrowDown\" ||\r\n          e.key === \"ArrowUp\" ||\r\n          e.key === \"ArrowLeft\" ||\r\n          e.key === \"ArrowRight\") &&\r\n        this.keys.indexOf(e.key) === -1\r\n      ) {\r\n        this.keys.push(e.key);\r\n      }\r\n    });\r\n    window.addEventListener(\"keyup\", (e) => {\r\n      if (\r\n        e.key === \"ArrowDown\" ||\r\n        e.key === \"ArrowUp\" ||\r\n        e.key === \"ArrowLeft\" ||\r\n        e.key === \"ArrowRight\"\r\n      ) {\r\n        this.keys.splice(this.keys.indexOf(e.key), 1);\r\n      }\r\n    });\r\n  }\r\n}","import { Entity } from \"../entity/entity.js\";\r\n\r\nexport class Ball extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, render, printer, textPos);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`);\r\n    return info;\r\n  }\r\n}","\r\nexport class BallInputHandler3 {\r\n  constructor(input) {\r\n    this.input = input;\r\n  }\r\n\r\n  handleInput(ball) {\r\n    const speed = .1;\r\n    if (this.input.keys.indexOf(\"ArrowLeft\") > -1) {\r\n      ball.speed.x = -speed;\r\n    }\r\n    else if (this.input.keys.indexOf(\"ArrowRight\") > -1) {\r\n      ball.speed.x = speed;\r\n    }\r\n    else if (this.input.keys.indexOf(\"ArrowUp\") > -1) {\r\n      ball.speed.y = -speed;\r\n    }\r\n    else if (this.input.keys.indexOf(\"ArrowDown\") > -1) {\r\n      ball.speed.y = speed;\r\n    }\r\n  }\r\n}\r\n","export class BallRender2 {\r\n    draw(ctx, ball) {\r\n        if (ball.size.x != ball.size.y)\r\n            throw \"This collider works only for rectangles!\";\r\n        this.#drawBall(ctx, ball);\r\n        this.#drawPossition(ctx, ball);\r\n    }\r\n\r\n    #drawBall(ctx, ball) {\r\n        var rectSize = ball.size.x;\r\n        ctx.fillStyle = \"green\";\r\n        ctx.fillRect(\r\n            ball.position.x - rectSize / 2,\r\n            ball.position.y - rectSize / 2,\r\n            rectSize,\r\n            rectSize\r\n        );\r\n    }\r\n\r\n    #drawPossition(ctx, ball) {\r\n        ctx.fillStyle = \"yellow\";\r\n        ctx.fillRect(ball.position.x - 5 / 2, ball.position.y - 5 / 2, 5, 5);\r\n    }\r\n}","\r\nexport class WallCollision {\r\n\r\n  constructor() {\r\n    this.log = '';\r\n  }\r\n\r\n  calculateCollision(ball) {\r\n    if (ball.size.x != ball.size.y)\r\n      throw 'This collider works only for rectangles!';\r\n\r\n    const ballSize = ball.size.x / 2;\r\n    const gameSize = ball.gameSize;\r\n\r\n    if (ball.position.x <= ballSize) {\r\n      ball.position.x = ballSize;\r\n      this.log = 'left';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.x >= gameSize.x - ballSize) {\r\n      ball.position.x = gameSize.x - ballSize;\r\n      this.log = 'right';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.y <= ballSize) {\r\n      ball.position.y = ballSize;\r\n      this.log = 'top';\r\n      ball.reverseYSpeed();\r\n    }\r\n    if (ball.position.y >= gameSize.y - ballSize) {\r\n      ball.position.y = gameSize.y - ballSize;\r\n      this.log = 'bottom';\r\n      ball.reverseYSpeed();\r\n    }\r\n  }\r\n}","import { Entity } from \"../entity/entity.js\";\r\n\r\nexport class Player extends Entity {\r\n\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos,\r\n    name = 'Player'\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, render, printer, textPos);\r\n    this.name = name;\r\n  }\r\n}","\r\nexport class BallCollisionRender {\r\n\r\n    constructor(ctx, pongCollision) {\r\n        this.ctx = ctx;\r\n        this.pongCollision = pongCollision;\r\n    }\r\n\r\n    draw() {\r\n        if (this.pongCollision.region) \r\n            this.#drawBallX();\r\n    }\r\n\r\n    #drawBallX() {\r\n        this.ctx.fillStyle = \"red\";\r\n        //X,Y1\r\n        this.ctx.fillRect(\r\n            this.pongCollision.ballX - 5/2,\r\n            this.pongCollision.ballY1 - 5/2,\r\n            5,\r\n            5\r\n        );\r\n        //X,Y2\r\n        this.ctx.fillRect(\r\n            this.pongCollision.ballX - 5/2,\r\n            this.pongCollision.ballY2 - 5/2,\r\n            5,\r\n            5\r\n        );\r\n        //playerX,playerY1\r\n        this.ctx.fillRect(\r\n            this.pongCollision.playerX - 5/2,\r\n            this.pongCollision.playerY1 - 5/2,\r\n            5,\r\n            5\r\n        );\r\n        //playerX,playerY2\r\n        this.ctx.fillRect(\r\n            this.pongCollision.playerX - 5/2,\r\n            this.pongCollision.playerY2 - 5/2,\r\n            5,\r\n            5\r\n        );\r\n    }\r\n}","export class PlayerRender {\r\n\r\n    draw(ctx, player) {\r\n        ctx.fillStyle = 'green';\r\n        ctx.fillRect(\r\n            player.position.x - player.size.x/2,\r\n            player.position.y - player.size.y/2,\r\n            player.size.x,\r\n            player.size.y\r\n        );\r\n    }\r\n}","export class Printer {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.setPrint('left', 'normal 12px Arial');\r\n  }\r\n\r\n  setPrint(align, font) {\r\n    this.ctx.textAlign = align;\r\n    this.ctx.font = font;\r\n  }\r\n\r\n  print(text, x, y, color) {\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillText(text, x, y);\r\n  }\r\n\r\n  printInLines(infoArray, color, dy, x0, y0) {\r\n    let y = y0;\r\n    infoArray.forEach(element => {\r\n      this.print(element, x0, y, color);\r\n      y += dy;\r\n    });\r\n  }\r\n}","\r\nexport class BallCollisionLeft {\r\n\r\n  constructor(printer) {\r\n    this.printer = printer;\r\n    this.ballY1 = 0;\r\n    this.playerY1 = 0;\r\n    this.ballY2 = 0;\r\n    this.playerY2 = 0;\r\n    this.ballX = 0;\r\n    this.playerX = 0;\r\n    this.xCollision = false;\r\n    this.yCollision = false;\r\n    this.xyCollision = false;\r\n    this.regionX = false;\r\n    this.regionY = false;\r\n    this.region = false;\r\n  }\r\n\r\n  calculateCollision(player, ball) {\r\n    this.#prepareParams(player, ball);\r\n    this.#isCollisionRegion(ball);\r\n    if (this.region) {\r\n      this.#isBallPlayerXCollision();\r\n      this.#isBallPlayerYCollision();\r\n      this.xyCollision = this.xCollision && this.yCollision;\r\n      if (this.xyCollision) {\r\n        ball.reverseXSpeed();\r\n      }\r\n    }\r\n  }\r\n\r\n  #prepareParams(player, ball) {\r\n    this.ballX = ball.position.x - ball.size.x / 2;\r\n    this.playerX = player.position.x + player.size.x / 2;\r\n    this.ballY1 = ball.position.y - ball.size.x / 2;\r\n    this.ballY2 = ball.position.y + ball.size.x / 2;\r\n    this.playerY1 = player.position.y - (player.size.y / 2);\r\n    this.playerY2 = player.position.y + (player.size.y / 2);\r\n  }\r\n\r\n  #isCollisionRegion(ball) {\r\n    this.regionX = this.ballX >= this.playerX - ball.size.x / 2\r\n      && this.ballX <= this.playerX + 2 * ball.size.x;\r\n    this.regionY = (this.ballY1 >= this.playerY1 - ball.size.x\r\n      && this.ballY1 <= this.playerY2 + ball.size.x)\r\n      && (this.ballY2 >= this.playerY1 - ball.size.x\r\n        && this.ballY2 <= this.playerY2 + ball.size.x);\r\n    this.region = this.regionX && this.regionY;\r\n  }\r\n\r\n  #isBallPlayerXCollision() {\r\n    this.xCollision = this.ballX <= this.playerX;\r\n  }\r\n\r\n  #isBallPlayerYCollision() {\r\n    this.yCollision = ((this.playerY1 <= this.ballY1) || (this.playerY1 <= this.ballY2))\r\n      && ((this.playerY2 >= this.ballY2) || (this.playerY2 >= this.ballY1));\r\n  }\r\n\r\n  draw() {\r\n    this.printer.print(`BallColl - ${this.getInfo()[0].join(', ')}`, 5, 95, \"white\");\r\n    this.printer.print(`BallColl - ${this.getInfo()[1].join(', ')}`, 5, 120, \"white\");\r\n    this.printer.print(`BallColl - ${this.getInfo()[2].join(', ')}`, 5, 145, \"white\");\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `ball x ${this.ballX.toFixed(0)}, y1 ${this.ballY1.toFixed(0)}, y2 ${this.ballY2.toFixed(0)}`,\r\n      ],\r\n      [\r\n        `player x ${this.playerX.toFixed(0)}, y1 ${this.playerY1.toFixed(0)}, y2 ${this.playerY2.toFixed(0)}`\r\n      ],\r\n      [\r\n        `regionXY (${this.regionX}, ${this.regionY})`,\r\n        `collXY (${this.xCollision}, ${this.yCollision})`,\r\n        `region (${this.region})`,\r\n        `coll (${this.xyCollision})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { InputHandlerEmpty } from \"../engine/input-handler-empty.js\";\r\nimport { KeysInputHandler } from \"../engine/keys-input-handler.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallInputHandler3 } from \"../engine/ball/ball-input-handler-v3.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Player } from \"../engine/player/player.js\";\r\nimport { BallCollisionRender } from \"../engine/ball-collision/ball-collision-render.js\";\r\nimport { PlayerRender } from \"../engine/player/player-render.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\nimport { BallCollisionLeft } from \"../engine/ball-collision/ball-collision-left.js\";\r\n\r\nexport class LeftFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.input = new KeysInputHandler();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      new Vector2(this.gameCanvas.size.x / 2 + 70, this.gameCanvas.size.y / 2),\r\n      new Vector2(40, 40),\r\n      new Vector2(0, 0),\r\n      new BallInputHandler3(this.input)\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision());\r\n\r\n    this.player1 = new Player(\r\n      this.gameCanvas.size,\r\n      new Vector2(this.gameCanvas.size.x / 2, this.gameCanvas.size.y / 2),\r\n      new Vector2(40, 200),\r\n      new Vector2(0, 0)\r\n      , new InputHandlerEmpty()\r\n      , new PlayerRender()\r\n      , this.printer\r\n      , new Vector2(5, 30));\r\n\r\n    this.collisionLeft = new BallCollisionLeft(this.printer);\r\n    this.collisionLeftRender = new BallCollisionRender(\r\n      this.gameCanvas.ctx\r\n      , this.collisionLeft);\r\n  }\r\n}","\r\nexport class BallCollisionRight {\r\n\r\n  constructor(printer) {\r\n    this.printer = printer;\r\n    this.ballY1 = 0;\r\n    this.playerY1 = 0;\r\n    this.ballY2 = 0;\r\n    this.playerY2 = 0;\r\n    this.ballX = 0;\r\n    this.playerX = 0;\r\n    this.xCollision = false;\r\n    this.yCollision = false;\r\n    this.xyCollision = false;\r\n    this.regionX = false;\r\n    this.regionY = false;\r\n    this.region = false;\r\n  }\r\n\r\n  calculateCollision(player, ball) {\r\n    this.#prepareParams(player, ball);\r\n    this.#isCollisionRegion(ball);\r\n    if (this.region) {\r\n      this.#isBallPlayerXCollision();\r\n      this.#isBallPlayerYCollision();\r\n      this.xyCollision = this.xCollision && this.yCollision;\r\n      if (this.xyCollision) {\r\n        ball.reverseXSpeed();\r\n      }\r\n    }\r\n  }\r\n\r\n  #prepareParams(player, ball) {\r\n    this.ballX = ball.position.x + ball.size.x / 2;\r\n    this.playerX = player.position.x - player.size.x / 2;\r\n    this.ballY1 = ball.position.y - ball.size.x / 2;\r\n    this.ballY2 = ball.position.y + ball.size.x / 2;\r\n    this.playerY1 = player.position.y - (player.size.y / 2);\r\n    this.playerY2 = player.position.y + (player.size.y / 2);\r\n  }\r\n\r\n  #isCollisionRegion(ball) {\r\n    this.regionX = this.ballX <= this.playerX + ball.size.x / 2\r\n      && this.ballX >= this.playerX - 2 * ball.size.x;\r\n    this.regionY = (this.ballY1 >= this.playerY1 - ball.size.x\r\n      && this.ballY1 <= this.playerY2 + ball.size.x)\r\n      && (this.ballY2 >= this.playerY1 - ball.size.x\r\n        && this.ballY2 <= this.playerY2 + ball.size.x);\r\n    this.region = this.regionX && this.regionY;\r\n  }\r\n\r\n  #isBallPlayerXCollision() {\r\n    this.xCollision = this.ballX >= this.playerX;\r\n  }\r\n\r\n  #isBallPlayerYCollision() {\r\n    this.yCollision = ((this.playerY1 <= this.ballY1) || (this.playerY1 <= this.ballY2))\r\n      && ((this.playerY2 >= this.ballY2) || (this.playerY2 >= this.ballY1));\r\n  }\r\n\r\n  draw() {\r\n    this.printer.print(`BallColl - ${this.getInfo()[0].join(', ')}`, 5, 95, \"white\");\r\n    this.printer.print(`BallColl - ${this.getInfo()[1].join(', ')}`, 5, 120, \"white\");\r\n    this.printer.print(`BallColl - ${this.getInfo()[2].join(', ')}`, 5, 145, \"white\");\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `ball x ${this.ballX.toFixed(0)}, y1 ${this.ballY1.toFixed(0)}, y2 ${this.ballY2.toFixed(0)}`,\r\n      ],\r\n      [\r\n        `player x ${this.playerX.toFixed(0)}, y1 ${this.playerY1.toFixed(0)}, y2 ${this.playerY2.toFixed(0)}`\r\n      ],\r\n      [\r\n        `regionXY (${this.regionX}, ${this.regionY})`,\r\n        `collXY (${this.xCollision}, ${this.yCollision})`,\r\n        `region (${this.region})`,\r\n        `coll (${this.xyCollision})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { InputHandlerEmpty } from \"../engine/input-handler-empty.js\";\r\nimport { KeysInputHandler } from \"../engine/keys-input-handler.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallInputHandler3 } from \"../engine/ball/ball-input-handler-v3.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Player } from \"../engine/player/player.js\";\r\nimport { BallCollisionRight } from \"../engine/ball-collision/ball-collision-right.js\";\r\nimport { BallCollisionRender } from \"../engine/ball-collision/ball-collision-render.js\";\r\nimport { PlayerRender } from \"../engine/player/player-render.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\n\r\nexport class RightFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.input = new KeysInputHandler();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      new Vector2(this.gameCanvas.size.x / 2 - 70, this.gameCanvas.size.y / 2),\r\n      new Vector2(40, 40),\r\n      new Vector2(0, 0),\r\n      new BallInputHandler3(this.input)\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision());\r\n\r\n    this.player2 = new Player(\r\n      this.gameCanvas.size,\r\n      new Vector2(this.gameCanvas.size.x / 2, this.gameCanvas.size.y / 2),\r\n      new Vector2(40, 200),\r\n      new Vector2(0, 0)\r\n      , new InputHandlerEmpty()\r\n      , new PlayerRender()\r\n      , this.printer\r\n      , new Vector2(5, 30));\r\n\r\n    this.collisionRight = new BallCollisionRight(this.printer);\r\n    this.collisionRightRender = new BallCollisionRender(\r\n      this.gameCanvas.ctx\r\n      , this.collisionRight);\r\n  }\r\n}","\r\nexport class CanvasData {\r\n  #canvasId;\r\n  #size;\r\n  #canvas;\r\n  #ctx;\r\n\r\n  constructor(canvasId, size) {\r\n    this.#canvasId = canvasId;\r\n    this.#size = size;\r\n  }\r\n\r\n  get canvasId() {\r\n    return this.#canvasId;\r\n  }\r\n\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n\r\n  get canvas() {\r\n    return this.#canvas;\r\n  }\r\n\r\n  get ctx() {\r\n    return this.#ctx;\r\n  }\r\n\r\n  setCanvas() {\r\n    this.#canvas = document.getElementById(this.#canvasId);\r\n    this.#canvas.width = this.#size.x;\r\n    this.#canvas.height = this.#size.y;\r\n    this.#ctx = this.#canvas.getContext('2d');\r\n  }\r\n}","'use strict';\r\n\r\nconst hide = 'hide';\r\nconst selectGame = 'select-controls-game';\r\nconst selectPlayer = 'select-controls-player';\r\nconst menuContainer = 'menu-container';\r\nconst menuButtons = 'menu-btns';\r\nconst btnStart = 'btn-start';\r\nconst btnReset = 'btn-reset';\r\nconst btnOverlay = 'btn-overlay';\r\n\r\nexport class Menu {\r\n  #menuContainer;\r\n  #menuBtns;\r\n  #btnStart;\r\n  #btnReset;\r\n  #btnOverlay;\r\n  #selectConstrols;\r\n  #callback;\r\n\r\n  static get hide() { return hide;}\r\n  static get selectGame() { return selectGame;}\r\n  static get selectPlayer() { return selectPlayer;}\r\n  static get menuContainer() { return menuContainer; }\r\n  static get btnStart() { return btnStart; }\r\n  static get btnReset() { return btnReset; }\r\n  static get btnOverlay() { return btnOverlay; }\r\n\r\n  constructor(onControlsChange) {\r\n    this.#callback = onControlsChange;\r\n    this.#menuContainer = document.getElementById(menuContainer);\r\n    this.#menuBtns = document.getElementById(menuButtons);\r\n    this.#btnStart = document.getElementById(btnStart);\r\n    this.#btnReset = document.getElementById(btnReset);\r\n    this.#btnOverlay = document.getElementById(btnOverlay);\r\n    this.#setSelectGetters();\r\n    this.#selectConstrols = document.getElementById('select-controls-container');\r\n  }\r\n\r\n  #setSelectGetters() {\r\n    HTMLSelectElement.prototype.__defineGetter__(\"val\", function () {\r\n      return this.options[this.selectedIndex].value;\r\n    });\r\n    HTMLSelectElement.prototype.__defineGetter__(\"text\", function () {\r\n      return this.options[this.selectedIndex].text;\r\n    });\r\n  }\r\n\r\n  setPlayerView(onControlsChange) {\r\n    this.#callback(this.#selectConstrols.childNodes[3].val);\r\n    this.#btnStart.classList.add(hide);\r\n    this.#btnReset.classList.add(hide);\r\n    this.#btnOverlay.classList.add(hide);\r\n    this.#selectConstrols.classList.add(selectPlayer);\r\n    this.#setSelectConstorls(onControlsChange);\r\n  }\r\n\r\n  setMyCollisionView(onControlsChange) {\r\n    this.#callback(this.#selectConstrols.childNodes[3].val);;\r\n    this.#selectConstrols.classList.add(selectPlayer);\r\n    this.#selectConstrols.classList.remove(hide);\r\n    this.#menuContainer.classList.remove(hide);\r\n    this.#setSelectConstorls(onControlsChange);\r\n  }\r\n  \r\n  setGameView() {\r\n    this.#menuContainer.classList.remove(hide);\r\n    this.#menuBtns.classList.remove(hide);\r\n    this.#btnStart.classList.remove(hide);\r\n    this.#btnReset.classList.remove(hide);\r\n    this.#btnOverlay.classList.remove(hide);\r\n  }\r\n\r\n  hide() {\r\n    this.#btnStart.classList.add(hide);\r\n    this.#btnReset.classList.add(hide);\r\n    this.#btnOverlay.classList.add(hide);\r\n    this.#selectConstrols.classList.add(hide);\r\n  }\r\n\r\n  #setSelectConstorls() {\r\n    this.#selectConstrols.addEventListener('change', (e) => {\r\n      this.#callback(e.target.value);\r\n    });\r\n  }\r\n}\r\n","import { CanvasData } from './canvas-data.js';\r\nimport { Vector2 } from './vector-2.js';\r\n\r\nexport class MultiCanvasData {\r\n  #key;\r\n  #data;\r\n\r\n  constructor() {\r\n    this.#key = \"laptop\";\r\n    this.#data = new Map();\r\n    this.#init();\r\n  }\r\n\r\n  #init() {\r\n    this.#add('laptop-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(800, 600)));\r\n\r\n    this.#add('laptop-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(650, 500)));\r\n\r\n    this.#add('laptop-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(800, 90)));\r\n\r\n    this.#add('phone-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(300, 300)));\r\n\r\n    this.#add('phone-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(500, 500)));\r\n\r\n    this.#add('phone-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(300, 90)));\r\n\r\n    this.get('game').setCanvas();\r\n    this.get('info').setCanvas();\r\n    this.get('points').setCanvas();\r\n  }\r\n\r\n  #add(id, canvasData) {\r\n    this.#data.set(id, canvasData);\r\n  }\r\n\r\n  get(name) {\r\n    return this.#data.get(`${this.#key}-${name}`);\r\n  }\r\n}"],"names":["parcelRequire","$d70316a6624f97ad$export$c977b3e384af9ae1","constructor","x","y","this","mag","Math","sqrt","normalize","nv","log","console","$db66411ee626ebf2$export$bc644a473284d944","initPos","gameSize","position","size","speed","inputHandler","render","printer","textPos","color","infoColor","name","update","timer","handleInput","deltaTime","setConstraints","reverseXSpeed","reverseYSpeed","reset","draw","ctx","drawInfo","p","data","getInfo","i","length","print","join","toFixed","$19a6fdda0539b4b0$export$bb6128256e450d57","renderers","super","drawText","$de4f6cf5c1392042$export$d9d3d6299ea1a309","wallCollision","setPosition","calculateCollision","info","concat","$ba252004c39b4a58$export$985739bfa5723e08","gameFactory","screen","input","ball","player1","player2","collisionLeft","collisionLeftRender","collisionRight","collisionRightRender","pointCount","timestamp","set","_clearCtx","gameCtx","_drawPoints","textCtx","_print","clearRect","textSize","isOn","fillStyle","fillRect","$709f5b399a788d52$export$acf825b8d0b90d55","views","infoCanvas","get","gameCanvas","pointsCanvas","$ab3d881720504dd4$export$c57e9b2d8b9e4de","lastTime","delta","$2206db82dedcde12$export$1765e58655818273","$43384781123344f3$export$e9bcac4d908bd660","keys","window","addEventListener","e","key","indexOf","push","splice","$3fc1d9742cbd1efb$export$a83d7c3fa53790c9","$c11fde1f2733d486$export$af31f03cabbfb221","$4b7c158a692a137d$export$60583e758e72954f","drawBall","drawPossition","rectSize","ctx1","ball1","$ae5800cad9cad6c6$export$84dfbe767db39e23","ballSize","$ed572433d9c8eafa$export$2616165974278734","$4127ff13ef501261$export$5399f29fd2f6a892","pongCollision","region","drawBallX","ballX","ballY1","ballY2","playerX","playerY1","playerY2","$58c18a7d44171f48$export$7ef3b3b8beb8aeb2","player","$c45ade8dc93d5d6d$export$ff97ddd7b62e4930","setPrint","align","font","textAlign","text","fillText","printInLines","infoArray","dy","x0","y0","forEach","element","$cffc2de9be4d7c7f$export$3b42bd0697f26fcd","xCollision","yCollision","xyCollision","regionX","regionY","prepareParams","isCollisionRegion","isBallPlayerXCollision","isBallPlayerYCollision","$31b5db1c2c114445$export$26e0608a78f2cb44","$2280eda6c0cb0a5c$export$56ddccd4d551d879","$e62230ba7b26a4b3$export$35568464656abc56","$6d9958fa14cad325$export$79b2296d3374d147","canvasId","canvas","setCanvas","document","getElementById","width","height","getContext","$692fae2d2bd5c2bc$var$hide","$692fae2d2bd5c2bc$var$selectPlayer","$692fae2d2bd5c2bc$var$menuContainer","$692fae2d2bd5c2bc$var$btnStart","$692fae2d2bd5c2bc$var$btnReset","$692fae2d2bd5c2bc$var$btnOverlay","$638d44f6457efbe0$var$game","$638d44f6457efbe0$var$factory","$638d44f6457efbe0$var$views","Map","init","add","id","canvasData","menuContainer","menuBtns","btnStart","btnReset","btnOverlay","selectConstrols","callback","hide","selectGame","selectPlayer","onControlsChange","setSelectGetters","HTMLSelectElement","prototype","__defineGetter__","options","selectedIndex","value","setPlayerView","childNodes","val","classList","setSelectConstorls","setMyCollisionView","remove","setGameView","target","$638d44f6457efbe0$var$animate","requestAnimationFrame"],"version":3,"file":"my-collision.4d3fae50.js.map"}