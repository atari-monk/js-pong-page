{"mappings":"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","sources":["src/js/slider/slider.js","src/js/engine/vector-2.js","src/js/engine/entity/entity.js","src/js/engine/entity/entity-v3.js","src/js/engine/ball/ball-v3.js","src/js/engine/game.js","src/js/engine/timer.js","src/js/engine/canvas-data.js","src/js/engine/slider.js","src/js/engine/multi-canvas-data.js","src/js/engine/game-v2.js","src/js/slider/slider-factory.js"],"sourcesContent":["import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport { Game2 } from '../engine/game-v2.js';\r\nimport { Slider } from '../engine/slider.js';\r\nimport { SliderFactory } from './slider-factory.js';\r\nimport { MultiCanvasData } from '../engine/multi-canvas-data.js';\r\n\r\nlet value = 15;\r\nwindow.addEventListener('load', function () {\r\n  const slider = document.getElementById('slider1');\r\n  slider.value = value;\r\n  const label = document.getElementById('value1');\r\n  label.innerHTML = value;\r\n  slider.addEventListener('change', function (e) {\r\n    value = e.target.value;\r\n    label.innerHTML = value;\r\n    console.log(value);\r\n  })\r\n});\r\n\r\nconst slider2 = document.getElementById('slider2');\r\nconst label2 = document.getElementById('value2');\r\nconst range2 = new Slider(35, slider2, label2);\r\nwindow.addEventListener('load', function () {\r\n  range2.onLoad();\r\n  slider2.addEventListener('change', function (e) {\r\n    range2.value = e.target.value;\r\n    slider2.value = e.target.value;\r\n    label2.innerHTML = slider2.value;\r\n    console.log(range2.value);\r\n  })\r\n});\r\n\r\nconst views = new MultiCanvasData();\r\nconst game = new Game2(new SliderFactory(views));\r\n\r\nfunction animate(timestamp) {\r\n  game.update(timestamp);\r\n  game.draw();\r\n  requestAnimationFrame(animate);\r\n};\r\n\r\nanimate(0);","\r\nexport class Vector2 {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  mag() {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  normalize() {\r\n    const mag = this.mag();\r\n    const nv = new Vector2();\r\n    nv.x = this.x / mag;\r\n    nv.y = this.y / mag;\r\n    return nv;\r\n  }\r\n\r\n  log() {\r\n    console.log(`(${this.x}, ${this.y})`);\r\n  }\r\n}","import { Vector2 } from \"../vector-2.js\";\r\n\r\nexport class Entity {\r\n  #initPos;\r\n\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    this.gameSize = gameSize;\r\n    this.position = position;\r\n    this.#initPos = new Vector2(position.x, position.y);\r\n    this.size = size;\r\n    this.speed = speed;\r\n    this.inputHandler = inputHandler;\r\n    this.render = render;\r\n    this.printer = printer;\r\n    this.textPos = textPos;\r\n    this.color = \"green\";\r\n    this.infoColor = \"white\";\r\n    this.name = 'entity';\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler.handleInput(this);\r\n    this.position.y -= timer.deltaTime * this.speed.y;\r\n    this.#setConstraints();\r\n  }\r\n\r\n  reverseXSpeed() {\r\n    this.speed.x *= -1;\r\n  }\r\n\r\n  reverseYSpeed() {\r\n    this.speed.y *= -1;\r\n  }\r\n\r\n  #setConstraints() {\r\n    if (this.position.y <= this.size.y / 2) {\r\n      this.position.y = this.size.y / 2;\r\n    }\r\n    if (this.position.y >= this.gameSize.y - this.size.y / 2) {\r\n      this.position.y = this.gameSize.y - this.size.y / 2;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.position.x = this.#initPos.x;\r\n    this.position.y = this.#initPos.y;\r\n    this.speed.x = 0;\r\n    this.speed.y = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.render.draw(ctx, this);\r\n    this.drawInfo();\r\n  }\r\n\r\n  drawInfo() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('   ')}`\r\n        , this.textPos.x, this.textPos.y + (i * 40) + 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - size (${this.size.x.toFixed(0)}, ${this.size.y.toFixed(0)}), vel (${this.speed.x.toFixed(2)}, ${this.speed.y.toFixed(2)}), pos (${this.position.x.toFixed(0)}, ${this.position.y.toFixed(0)})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Entity } from \"./entity.js\";\r\n\r\nexport class EntityV3 extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos);\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.renderers['graphics'].draw(ctx, this);\r\n  }\r\n\r\n  drawText(ctx) {\r\n    this.renderers['text'].draw(ctx, this);\r\n  }\r\n}","import { EntityV3 } from \"../entity/entity-v3.js\";\r\n\r\nexport class BallV3 extends EntityV3 {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos, wallCollision);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n    this.renderers = renderers;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision?.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`); \r\n    return info;\r\n  }\r\n}","import { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game {\r\n  constructor(gameFactory) {\r\n    this.gameFactory = gameFactory;\r\n    this.screen = gameFactory.screen;\r\n    this.timer = this.gameFactory.timer;\r\n    this.input = this.gameFactory.input;\r\n    this.ball = this.gameFactory.ball;\r\n    this.player1 = this.gameFactory.player1;\r\n    this.player2 = this.gameFactory.player2;\r\n    this.collisionLeft = this.gameFactory.collisionLeft;\r\n    this.collisionLeftRender = this.gameFactory.collisionLeftRender;\r\n    this.collisionRight = this.gameFactory.collisionRight;\r\n    this.collisionRightRender = this.gameFactory.collisionRightRender;\r\n    this.printer = this.gameFactory.printer;\r\n    this.pointCount = this.gameFactory.pointCount;\r\n    this.name = 'Game';\r\n  }\r\n\r\n  update(timestamp) {\r\n    this.timer.set(timestamp);\r\n    if (false) this.timer.log();\r\n    if (this.ball != null) this.ball.update(this.timer);\r\n    if (this.player1 != null) this.player1.update(this.timer);\r\n    if (this.player2 != null) this.player2.update(this.timer);\r\n    if (this.collisionLeft != null && this.ball != null && this.player1 != null)\r\n      this.collisionLeft.calculateCollision(this.player1, this.ball);\r\n    if (\r\n      this.collisionRight != null &&\r\n      this.ball != null &&\r\n      this.player2 != null\r\n    )\r\n      this.collisionRight.calculateCollision(this.player2, this.ball);\r\n    this.pointCount?.update();\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.screen.gameCtx);\r\n    if (this.player1 != null) this.player1.draw(this.screen.gameCtx);\r\n    if (this.player2 != null) this.player2.draw(this.screen.gameCtx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.screen.gameCtx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.screen.textCtx);\r\n    this._print();\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.screen.gameCtx.clearRect(0, 0, this.screen.gameSize.x, this.screen.gameSize.y);\r\n    this.screen.textCtx.clearRect(0, 0, this.screen.textSize.x, this.screen.textSize.y);\r\n  }\r\n\r\n  _print() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('     ')}`\r\n        , 5, 20 + i * 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        'test'\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _drawPoints(ctx, isOn = false) {\r\n    if (!isOn) return;\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(this.screen.gameSize.x / 2 - .5, this.screen.gameSize.y / 2 - .5, 1, 1);\r\n  }\r\n}","export class Timer {\r\n  constructor() {\r\n    this.deltaTime = 0;\r\n    this.lastTime = 0;\r\n  }\r\n\r\n  set(timestamp) {\r\n    const delta = timestamp - this.lastTime;\r\n    if(delta < 20)\r\n      this.deltaTime = delta;\r\n    this.lastTime = timestamp;\r\n  }\r\n\r\n  log() {\r\n    console.log(this.deltaTime);\r\n  }\r\n}","\r\nexport class CanvasData {\r\n  #canvasId;\r\n  #size;\r\n  #canvas;\r\n  #ctx;\r\n\r\n  constructor(canvasId, size) {\r\n    this.#canvasId = canvasId;\r\n    this.#size = size;\r\n  }\r\n\r\n  get canvasId() {\r\n    return this.#canvasId;\r\n  }\r\n\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n\r\n  get canvas() {\r\n    return this.#canvas;\r\n  }\r\n\r\n  get ctx() {\r\n    return this.#ctx;\r\n  }\r\n\r\n  setCanvas() {\r\n    this.#canvas = document.getElementById(this.#canvasId);\r\n    this.#canvas.width = this.#size.x;\r\n    this.#canvas.height = this.#size.y;\r\n    this.#ctx = this.#canvas.getContext('2d');\r\n  }\r\n}","\r\nexport class Slider {\r\n    constructor(initValue, slider, label) {\r\n        this.value = initValue;\r\n        this.slider = slider;\r\n        this.label = label;\r\n    }\r\n\r\n    onLoad() {\r\n        this.slider.value = this.value;\r\n        this.label.innerHTML = this.value;\r\n    }\r\n}","import { CanvasData } from './canvas-data.js';\r\nimport { Vector2 } from './vector-2.js';\r\n\r\nexport class MultiCanvasData {\r\n  #key;\r\n  #data;\r\n\r\n  constructor() {\r\n    this.#key = \"laptop\";\r\n    this.#data = new Map();\r\n    this.#init();\r\n  }\r\n\r\n  #init() {\r\n    this.#add('laptop-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(800, 600)));\r\n\r\n    this.#add('laptop-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(650, 500)));\r\n\r\n    this.#add('laptop-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(800, 90)));\r\n\r\n    this.#add('phone-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(300, 300)));\r\n\r\n    this.#add('phone-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(500, 500)));\r\n\r\n    this.#add('phone-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(300, 90)));\r\n\r\n    this.get('game').setCanvas();\r\n    this.get('info').setCanvas();\r\n    this.get('points').setCanvas();\r\n  }\r\n\r\n  #add(id, canvasData) {\r\n    this.#data.set(id, canvasData);\r\n  }\r\n\r\n  get(name) {\r\n    return this.#data.get(`${this.#key}-${name}`);\r\n  }\r\n}","import { Game } from './game.js';\r\nimport { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game2 extends Game {\r\n\r\n  #print;\r\n\r\n  constructor(gameFactory, print = true) {\r\n    super(gameFactory);\r\n    this.#print = print;\r\n    this.views = gameFactory.views;\r\n    this.infoCanvas = this.views.get('info');\r\n    this.gameCanvas = this.views.get('game');\r\n    this.pointsCanvas = this.views.get('points');\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.gameCanvas.ctx);\r\n    if (this.player1 != null) this.player1.draw(this.gameCanvas.ctx);\r\n    if (this.player2 != null) this.player2.draw(this.gameCanvas.ctx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.gameCanvas.ctx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.infoCanvas.ctx);\r\n    if (this.input?.draw) this.input?.draw();\r\n    this.#print ? this._print() : {};\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - game-canvas (${this.gameCanvas.size.x}, ${this.gameCanvas.size.y}), info-canvas (${this.infoCanvas.size.x}, ${this.infoCanvas.size.y}), points-canvas (${this.pointsCanvas.size.x}, ${this.pointsCanvas.size.y})`\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.gameCanvas.ctx.clearRect(0, 0, this.gameCanvas.size.x, this.gameCanvas.size.y);\r\n    this.infoCanvas.ctx.clearRect(0, 0, this.infoCanvas.size.x, this.infoCanvas.size.y);\r\n    this.pointsCanvas.ctx.clearRect(0, 0, this.pointsCanvas.size.x, this.pointsCanvas.size.y);\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\n\r\nexport class SliderFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n  }\r\n}"],"names":["parcelRequire","$d70316a6624f97ad$export$c977b3e384af9ae1","constructor","x","y","this","mag","Math","sqrt","normalize","nv","log","console","$db66411ee626ebf2$export$bc644a473284d944","initPos","gameSize","position","size","speed","inputHandler","render","printer","textPos","color","infoColor","name","update","timer","handleInput","deltaTime","setConstraints","reverseXSpeed","reverseYSpeed","reset","draw","ctx","drawInfo","p","data","getInfo","i","length","print","join","toFixed","$19a6fdda0539b4b0$export$bb6128256e450d57","renderers","super","drawText","$de4f6cf5c1392042$export$d9d3d6299ea1a309","wallCollision","setPosition","calculateCollision","info","concat","$ba252004c39b4a58$export$985739bfa5723e08","gameFactory","screen","input","ball","player1","player2","collisionLeft","collisionLeftRender","collisionRight","collisionRightRender","pointCount","timestamp","set","_clearCtx","gameCtx","_drawPoints","textCtx","_print","clearRect","textSize","isOn","fillStyle","fillRect","$ab3d881720504dd4$export$c57e9b2d8b9e4de","lastTime","delta","$6d9958fa14cad325$export$79b2296d3374d147","canvasId","canvas","setCanvas","document","getElementById","width","height","getContext","$d8757035731d55ac$var$value","window","addEventListener","slider","value","label","innerHTML","e","target","$d8757035731d55ac$var$slider2","$d8757035731d55ac$var$label2","$d8757035731d55ac$var$range2","initValue","onLoad","$d8757035731d55ac$var$views","key","Map","init","add","get","id","canvasData","$d8757035731d55ac$var$game","views","infoCanvas","gameCanvas","pointsCanvas","$d8757035731d55ac$var$animate","requestAnimationFrame"],"version":3,"file":"slider.c9ff7c20.js.map"}