{"mappings":"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","sources":["src/js/walls/walls.js","src/js/engine/timer.js","src/js/engine/vector-2.js","src/js/engine/entity/entity.js","src/js/engine/ball/ball.js","src/js/engine/ball/ball-render-v2.js","src/js/engine/wall-collision/wall-collision.js","src/js/engine/printer.js","src/js/walls/left-factory.js","src/js/walls/right-factory.js","src/js/walls/bottom-factory.js","src/js/walls/top-factory.js","src/js/engine/entity/entity-v3.js","src/js/engine/ball/ball-v3.js","src/js/engine/game.js","src/js/engine/game-v2.js","src/js/engine/canvas-data.js","src/js/walls/delay.js","src/js/engine/multi-canvas-data.js"],"sourcesContent":["import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport { LeftFactory } from './left-factory.js';\r\nimport { RightFactory } from './right-factory.js';\r\nimport { BottomFactory } from './bottom-factory.js';\r\nimport { TopFactory } from './top-factory.js';\r\nimport { Game2 } from '../engine/game-v2.js';\r\nimport { MultiCanvasData } from '../engine/multi-canvas-data.js';\r\nimport './delay.js'\r\n\r\nconst views = new MultiCanvasData();\r\nlet game, stop;\r\n\r\nconst animate = (timestamp) => {\r\n  game?.update(timestamp);\r\n  game?.draw();\r\n  stop = requestAnimationFrame(animate);\r\n};\r\n\r\nconst setGame = (newGame) => {\r\n  game = newGame;\r\n  animate(0);\r\n}\r\n\r\nconst cancel = () => cancelAnimationFrame(stop);\r\n\r\nconst setCycle = (delay = 3500) =>\r\n  Promise.delay(() => setGame(new Game2(new LeftFactory(views))))\r\n    .delay(cancel, delay)\r\n    .delay(() => setGame(new Game2(new TopFactory(views))))\r\n    .delay(cancel, delay)\r\n    .delay(() => setGame(new Game2(new RightFactory(views))))\r\n    .delay(cancel, delay)\r\n    .delay(() => setGame(new Game2(new BottomFactory(views))))\r\n    .delay(cancel, delay);\r\n\r\nsetCycle();\r\nsetInterval(() => {\r\n  setCycle();\r\n}, 14000);","export class Timer {\r\n  constructor() {\r\n    this.deltaTime = 0;\r\n    this.lastTime = 0;\r\n  }\r\n\r\n  set(timestamp) {\r\n    const delta = timestamp - this.lastTime;\r\n    if(delta < 20)\r\n      this.deltaTime = delta;\r\n    this.lastTime = timestamp;\r\n  }\r\n\r\n  log() {\r\n    console.log(this.deltaTime);\r\n  }\r\n}","\r\nexport class Vector2 {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  mag() {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  normalize() {\r\n    const mag = this.mag();\r\n    const nv = new Vector2();\r\n    nv.x = this.x / mag;\r\n    nv.y = this.y / mag;\r\n    return nv;\r\n  }\r\n\r\n  log() {\r\n    console.log(`(${this.x}, ${this.y})`);\r\n  }\r\n}","import { Vector2 } from \"../vector-2.js\";\r\n\r\nexport class Entity {\r\n  #initPos;\r\n\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    this.gameSize = gameSize;\r\n    this.position = position;\r\n    this.#initPos = new Vector2(position.x, position.y);\r\n    this.size = size;\r\n    this.speed = speed;\r\n    this.inputHandler = inputHandler;\r\n    this.render = render;\r\n    this.printer = printer;\r\n    this.textPos = textPos;\r\n    this.color = \"green\";\r\n    this.infoColor = \"white\";\r\n    this.name = 'entity';\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler.handleInput(this);\r\n    this.position.y -= timer.deltaTime * this.speed.y;\r\n    this.#setConstraints();\r\n  }\r\n\r\n  reverseXSpeed() {\r\n    this.speed.x *= -1;\r\n  }\r\n\r\n  reverseYSpeed() {\r\n    this.speed.y *= -1;\r\n  }\r\n\r\n  #setConstraints() {\r\n    if (this.position.y <= this.size.y / 2) {\r\n      this.position.y = this.size.y / 2;\r\n    }\r\n    if (this.position.y >= this.gameSize.y - this.size.y / 2) {\r\n      this.position.y = this.gameSize.y - this.size.y / 2;\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.position.x = this.#initPos.x;\r\n    this.position.y = this.#initPos.y;\r\n    this.speed.x = 0;\r\n    this.speed.y = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.render.draw(ctx, this);\r\n    this.drawInfo();\r\n  }\r\n\r\n  drawInfo() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('   ')}`\r\n        , this.textPos.x, this.textPos.y + (i * 40) + 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - size (${this.size.x.toFixed(0)}, ${this.size.y.toFixed(0)}), vel (${this.speed.x.toFixed(2)}, ${this.speed.y.toFixed(2)}), pos (${this.position.x.toFixed(0)}, ${this.position.y.toFixed(0)})`\r\n      ]\r\n    ];\r\n  }\r\n}","import { Entity } from \"../entity/entity.js\";\r\n\r\nexport class Ball extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    render,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, render, printer, textPos);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`);\r\n    return info;\r\n  }\r\n}","export class BallRender2 {\r\n    draw(ctx, ball) {\r\n        if (ball.size.x != ball.size.y)\r\n            throw \"This collider works only for rectangles!\";\r\n        this.#drawBall(ctx, ball);\r\n        this.#drawPossition(ctx, ball);\r\n    }\r\n\r\n    #drawBall(ctx, ball) {\r\n        var rectSize = ball.size.x;\r\n        ctx.fillStyle = \"green\";\r\n        ctx.fillRect(\r\n            ball.position.x - rectSize / 2,\r\n            ball.position.y - rectSize / 2,\r\n            rectSize,\r\n            rectSize\r\n        );\r\n    }\r\n\r\n    #drawPossition(ctx, ball) {\r\n        ctx.fillStyle = \"yellow\";\r\n        ctx.fillRect(ball.position.x - 5 / 2, ball.position.y - 5 / 2, 5, 5);\r\n    }\r\n}","\r\nexport class WallCollision {\r\n\r\n  constructor() {\r\n    this.log = '';\r\n  }\r\n\r\n  calculateCollision(ball) {\r\n    if (ball.size.x != ball.size.y)\r\n      throw 'This collider works only for rectangles!';\r\n\r\n    const ballSize = ball.size.x / 2;\r\n    const gameSize = ball.gameSize;\r\n\r\n    if (ball.position.x <= ballSize) {\r\n      ball.position.x = ballSize;\r\n      this.log = 'left';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.x >= gameSize.x - ballSize) {\r\n      ball.position.x = gameSize.x - ballSize;\r\n      this.log = 'right';\r\n      ball.reverseXSpeed();\r\n    }\r\n    if (ball.position.y <= ballSize) {\r\n      ball.position.y = ballSize;\r\n      this.log = 'top';\r\n      ball.reverseYSpeed();\r\n    }\r\n    if (ball.position.y >= gameSize.y - ballSize) {\r\n      ball.position.y = gameSize.y - ballSize;\r\n      this.log = 'bottom';\r\n      ball.reverseYSpeed();\r\n    }\r\n  }\r\n}","export class Printer {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.setPrint('left', 'normal 12px Arial');\r\n  }\r\n\r\n  setPrint(align, font) {\r\n    this.ctx.textAlign = align;\r\n    this.ctx.font = font;\r\n  }\r\n\r\n  print(text, x, y, color) {\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.fillText(text, x, y);\r\n  }\r\n\r\n  printInLines(infoArray, color, dy, x0, y0) {\r\n    let y = y0;\r\n    infoArray.forEach(element => {\r\n      this.print(element, x0, y, color);\r\n      y += dy;\r\n    });\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\n\r\nexport class LeftFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    const size = new Vector2(100, 100);\r\n    const position = new Vector2(size.x / 2 + 20, this.gameCanvas.size.y / 2);\r\n    const velocity = new Vector2(-0.01, 0.0);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      position,\r\n      size,\r\n      velocity,\r\n      null\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision()\r\n    );\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\n\r\nexport class RightFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    const size = new Vector2(100, 100);\r\n    const position = new Vector2(this.gameCanvas.size.x - (size.x / 2 + 20), this.gameCanvas.size.y / 2);\r\n    const velocity = new Vector2(0.01, 0.0);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      position,\r\n      size,\r\n      velocity,\r\n      null\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision()\r\n    );\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\n\r\nexport class BottomFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    const size = new Vector2(100, 100);\r\n    const position = new Vector2(this.gameCanvas.size.x / 2, this.gameCanvas.size.y - (size.x / 2 + 20));\r\n    const velocity = new Vector2(0.0, 0.01);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      position,\r\n      size,\r\n      velocity,\r\n      null\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision()\r\n    );\r\n  }\r\n}","import { Timer } from \"../engine/timer.js\";\r\nimport { Vector2 } from \"../engine/vector-2.js\";\r\nimport { Ball } from \"../engine/ball/ball.js\";\r\nimport { BallRender2 } from \"../engine/ball/ball-render-v2.js\";\r\nimport { WallCollision } from \"../engine/wall-collision/wall-collision.js\";\r\nimport { Printer } from \"../engine/printer.js\";\r\n\r\nexport class TopFactory {\r\n  constructor(views) {\r\n    this.views = views;\r\n    this.infoCanvas = views.get('info');\r\n    this.gameCanvas = views.get('game');\r\n    this.timer = new Timer();\r\n    this.printer = new Printer(this.infoCanvas.ctx);\r\n\r\n    const size = new Vector2(100, 100);\r\n    const position = new Vector2(this.gameCanvas.size.x / 2, size.x / 2 + 20);\r\n    const velocity = new Vector2(0.0, -0.01);\r\n\r\n    this.ball = new Ball(\r\n      this.gameCanvas.size,\r\n      position,\r\n      size,\r\n      velocity,\r\n      null\r\n      , new BallRender2()\r\n      , this.printer\r\n      , new Vector2(5, 5)\r\n      , new WallCollision()\r\n    );\r\n  }\r\n}","import { Entity } from \"./entity.js\";\r\n\r\nexport class EntityV3 extends Entity {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos);\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.renderers['graphics'].draw(ctx, this);\r\n  }\r\n\r\n  drawText(ctx) {\r\n    this.renderers['text'].draw(ctx, this);\r\n  }\r\n}","import { EntityV3 } from \"../entity/entity-v3.js\";\r\n\r\nexport class BallV3 extends EntityV3 {\r\n  constructor(\r\n    gameSize,\r\n    position,\r\n    size,\r\n    speed,\r\n    inputHandler,\r\n    renderers,\r\n    printer,\r\n    textPos,\r\n    wallCollision\r\n  ) {\r\n    super(gameSize, position, size, speed, inputHandler, renderers['graphics'], printer, textPos, wallCollision);\r\n    this.name = 'Ball';\r\n    this.wallCollision = wallCollision;\r\n    this.renderers = renderers;\r\n  }\r\n\r\n  update(timer) {\r\n    this.inputHandler?.handleInput(this);\r\n    this.#setPosition(timer);\r\n    this.wallCollision?.calculateCollision(this);\r\n  }\r\n\r\n  #setPosition(timer) {\r\n    this.position.x += timer.deltaTime * this.speed.x;\r\n    this.position.y += timer.deltaTime * this.speed.y;\r\n  }\r\n\r\n  getInfo() {\r\n    const info = super.getInfo();\r\n    info[0][0] = info[0][0].concat(`, wall (${this.wallCollision.log})`); \r\n    return info;\r\n  }\r\n}","import { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game {\r\n  constructor(gameFactory) {\r\n    this.gameFactory = gameFactory;\r\n    this.screen = gameFactory.screen;\r\n    this.timer = this.gameFactory.timer;\r\n    this.input = this.gameFactory.input;\r\n    this.ball = this.gameFactory.ball;\r\n    this.player1 = this.gameFactory.player1;\r\n    this.player2 = this.gameFactory.player2;\r\n    this.collisionLeft = this.gameFactory.collisionLeft;\r\n    this.collisionLeftRender = this.gameFactory.collisionLeftRender;\r\n    this.collisionRight = this.gameFactory.collisionRight;\r\n    this.collisionRightRender = this.gameFactory.collisionRightRender;\r\n    this.printer = this.gameFactory.printer;\r\n    this.pointCount = this.gameFactory.pointCount;\r\n    this.name = 'Game';\r\n  }\r\n\r\n  update(timestamp) {\r\n    this.timer.set(timestamp);\r\n    if (false) this.timer.log();\r\n    if (this.ball != null) this.ball.update(this.timer);\r\n    if (this.player1 != null) this.player1.update(this.timer);\r\n    if (this.player2 != null) this.player2.update(this.timer);\r\n    if (this.collisionLeft != null && this.ball != null && this.player1 != null)\r\n      this.collisionLeft.calculateCollision(this.player1, this.ball);\r\n    if (\r\n      this.collisionRight != null &&\r\n      this.ball != null &&\r\n      this.player2 != null\r\n    )\r\n      this.collisionRight.calculateCollision(this.player2, this.ball);\r\n    this.pointCount?.update();\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.screen.gameCtx);\r\n    if (this.player1 != null) this.player1.draw(this.screen.gameCtx);\r\n    if (this.player2 != null) this.player2.draw(this.screen.gameCtx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.screen.gameCtx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.screen.textCtx);\r\n    this._print();\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.screen.gameCtx.clearRect(0, 0, this.screen.gameSize.x, this.screen.gameSize.y);\r\n    this.screen.textCtx.clearRect(0, 0, this.screen.textSize.x, this.screen.textSize.y);\r\n  }\r\n\r\n  _print() {\r\n    const p = this.printer;\r\n    const data = this.getInfo();\r\n    for (let i = 0; i < data.length; i++) {\r\n      p?.print(`${data[i].join('     ')}`\r\n        , 5, 20 + i * 40, this.infoColor);\r\n    }\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        'test'\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _drawPoints(ctx, isOn = false) {\r\n    if (!isOn) return;\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(this.screen.gameSize.x / 2 - .5, this.screen.gameSize.y / 2 - .5, 1, 1);\r\n  }\r\n}","import { Game } from './game.js';\r\nimport { BallV3 } from './ball/ball-v3.js';\r\n\r\nexport class Game2 extends Game {\r\n\r\n  #print;\r\n\r\n  constructor(gameFactory, print = true) {\r\n    super(gameFactory);\r\n    this.#print = print;\r\n    this.views = gameFactory.views;\r\n    this.infoCanvas = this.views.get('info');\r\n    this.gameCanvas = this.views.get('game');\r\n    this.pointsCanvas = this.views.get('points');\r\n  }\r\n\r\n  draw() {\r\n    this._clearCtx();\r\n    if (this.ball != null) this.ball.draw(this.gameCanvas.ctx);\r\n    if (this.player1 != null) this.player1.draw(this.gameCanvas.ctx);\r\n    if (this.player2 != null) this.player2.draw(this.gameCanvas.ctx);\r\n    if (this.collisionLeftRender != null) this.collisionLeftRender.draw();\r\n    if (this.collisionRightRender != null) this.collisionRightRender.draw();\r\n    this.collisionLeft?.draw();\r\n    this.collisionRight?.draw();\r\n    this.pointCount?.draw();\r\n\r\n    this._drawPoints(this.gameCanvas.ctx);\r\n    if (this.ball instanceof BallV3) this.ball?.drawText(this.infoCanvas.ctx);\r\n    if (this.input?.draw) this.input?.draw();\r\n    this.#print ? this._print() : {};\r\n  }\r\n\r\n  getInfo() {\r\n    return [\r\n      [\r\n        `${this.name} - game-canvas (${this.gameCanvas.size.x}, ${this.gameCanvas.size.y}), info-canvas (${this.infoCanvas.size.x}, ${this.infoCanvas.size.y}), points-canvas (${this.pointsCanvas.size.x}, ${this.pointsCanvas.size.y})`\r\n      ]\r\n    ];\r\n  }\r\n\r\n  _clearCtx() {\r\n    this.gameCanvas.ctx.clearRect(0, 0, this.gameCanvas.size.x, this.gameCanvas.size.y);\r\n    this.infoCanvas.ctx.clearRect(0, 0, this.infoCanvas.size.x, this.infoCanvas.size.y);\r\n    this.pointsCanvas.ctx.clearRect(0, 0, this.pointsCanvas.size.x, this.pointsCanvas.size.y);\r\n  }\r\n}","\r\nexport class CanvasData {\r\n  #canvasId;\r\n  #size;\r\n  #canvas;\r\n  #ctx;\r\n\r\n  constructor(canvasId, size) {\r\n    this.#canvasId = canvasId;\r\n    this.#size = size;\r\n  }\r\n\r\n  get canvasId() {\r\n    return this.#canvasId;\r\n  }\r\n\r\n  get size() {\r\n    return this.#size;\r\n  }\r\n\r\n  get canvas() {\r\n    return this.#canvas;\r\n  }\r\n\r\n  get ctx() {\r\n    return this.#ctx;\r\n  }\r\n\r\n  setCanvas() {\r\n    this.#canvas = document.getElementById(this.#canvasId);\r\n    this.#canvas.width = this.#size.x;\r\n    this.#canvas.height = this.#size.y;\r\n    this.#ctx = this.#canvas.getContext('2d');\r\n  }\r\n}","'use strict';\r\n\r\nfunction delay(t) {\r\n  return new Promise(function (resolve) {\r\n    setInterval(resolve, t);\r\n  });\r\n}\r\n\r\nPromise.delay = function (fn, t) {\r\n  return delay(t).then(fn);\r\n}\r\n\r\nPromise.prototype.delay = async function (fn, t) {\r\n  await this;\r\n  return Promise.delay(fn, t);\r\n}","import { CanvasData } from './canvas-data.js';\r\nimport { Vector2 } from './vector-2.js';\r\n\r\nexport class MultiCanvasData {\r\n  #key;\r\n  #data;\r\n\r\n  constructor() {\r\n    this.#key = \"laptop\";\r\n    this.#data = new Map();\r\n    this.#init();\r\n  }\r\n\r\n  #init() {\r\n    this.#add('laptop-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(800, 600)));\r\n\r\n    this.#add('laptop-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(650, 500)));\r\n\r\n    this.#add('laptop-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(800, 90)));\r\n\r\n    this.#add('phone-game',\r\n      new CanvasData(\r\n        'game-canvas',\r\n        new Vector2(300, 300)));\r\n\r\n    this.#add('phone-info',\r\n      new CanvasData(\r\n        'info-canvas',\r\n        new Vector2(500, 500)));\r\n\r\n    this.#add('phone-points',\r\n      new CanvasData(\r\n        'points-canvas',\r\n        new Vector2(300, 90)));\r\n\r\n    this.get('game').setCanvas();\r\n    this.get('info').setCanvas();\r\n    this.get('points').setCanvas();\r\n  }\r\n\r\n  #add(id, canvasData) {\r\n    this.#data.set(id, canvasData);\r\n  }\r\n\r\n  get(name) {\r\n    return this.#data.get(`${this.#key}-${name}`);\r\n  }\r\n}"],"names":["parcelRequire","$ab3d881720504dd4$export$c57e9b2d8b9e4de","constructor","this","deltaTime","lastTime","set","timestamp","delta","log","console","$d70316a6624f97ad$export$c977b3e384af9ae1","x","y","mag","Math","sqrt","normalize","nv","$db66411ee626ebf2$export$bc644a473284d944","initPos","gameSize","position","size","speed","inputHandler","render","printer","textPos","color","infoColor","name","update","timer","handleInput","setConstraints","reverseXSpeed","reverseYSpeed","reset","draw","ctx","drawInfo","p","data","getInfo","i","length","print","join","toFixed","$3fc1d9742cbd1efb$export$a83d7c3fa53790c9","wallCollision","super","setPosition","calculateCollision","info","concat","$4b7c158a692a137d$export$60583e758e72954f","ball","drawBall","drawPossition","rectSize","fillStyle","fillRect","ctx1","ball1","$ae5800cad9cad6c6$export$84dfbe767db39e23","ballSize","$c45ade8dc93d5d6d$export$ff97ddd7b62e4930","setPrint","align","font","textAlign","text","fillText","printInLines","infoArray","dy","x0","y0","forEach","element","$513fc1e90ada6f82$export$26e0608a78f2cb44","views","infoCanvas","get","gameCanvas","velocity","$a04eaacfd25589ae$export$35568464656abc56","$a2a9dea10ad08587$export$6897b858d7d1c758","$71d0ce7f6b006f07$export$534b4e559f567d1e","$19a6fdda0539b4b0$export$bb6128256e450d57","renderers","drawText","$de4f6cf5c1392042$export$d9d3d6299ea1a309","$ba252004c39b4a58$export$985739bfa5723e08","gameFactory","screen","input","player1","player2","collisionLeft","collisionLeftRender","collisionRight","collisionRightRender","pointCount","_clearCtx","gameCtx","_drawPoints","textCtx","_print","clearRect","textSize","isOn","$709f5b399a788d52$export$acf825b8d0b90d55","pointsCanvas","$6d9958fa14cad325$export$79b2296d3374d147","canvasId","canvas","setCanvas","document","getElementById","width","height","getContext","Promise","delay","fn","t","resolve","setInterval","$c49f5693ecd7674d$var$delay","then","prototype","async","$240e4feedcc9695e$var$views","key","Map","init","add","id","canvasData","$240e4feedcc9695e$var$game","$240e4feedcc9695e$var$stop","$240e4feedcc9695e$var$animate","requestAnimationFrame","$240e4feedcc9695e$var$setGame","newGame","$240e4feedcc9695e$var$cancel","cancelAnimationFrame","$240e4feedcc9695e$var$setCycle"],"version":3,"file":"walls.210fd4c9.js.map"}